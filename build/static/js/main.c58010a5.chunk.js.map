{"version":3,"sources":["Components/Blogs/blogs.module.css","appauth.js","Components/Academic/acc_placeorder.module.css","Components/langingpage/welcomeheader.module.css","Components/protected/Dashboard/dashboard.module.css","HOC/layout/footer/appfooter.module.css","Components/Auth/login.js","Components/Auth/auth.module.css","AuthRoutes/protected.js","HOC/layout/header/appheader.js","HOC/layout/footer/appFooter.js","HOC/layout/applayout.js","Widgets/Carousel/Main/maincarousel.js","Components/langingpage/welcomeheader.js","Components/langingpage/sideleftpage.js","Components/langingpage/mainpage.js","Components/langingpage/siderightpage.js","Components/langingpage/index.js","Components/appHome/apphome.js","Components/Academic/acc_placeorder.js","Components/Academic/acc_bio.js","Components/Academic/acc_payrates.js","Components/Academic/acc_bio_description.js","Components/Academic/acc_services.js","Components/Academic/acc_worksamples.js","Components/Blogs/blogs.js","Components/Blogs/blog_single.js","Components/Auth/logout.js","Components/protected/Dashboard/appdashboard_layout.js","Components/protected/Dashboard/dashboard.js","Components/protected/Dashboard/orders/nil_orders.js","Components/protected/Dashboard/orders/archived_orders.js","Components/protected/Dashboard/orders/orders.js","Components/protected/Dashboard/orders/order_view.js","Components/protected/Dashboard/orders/order_formats.js","Components/protected/Dashboard/orders/order_categories.js","Components/protected/Dashboard/orders/order_lang.js","Components/protected/Dashboard/orders/placeOrder.js","Components/protected/Dashboard/blogs/blog_cats.js","Components/protected/Dashboard/blogs/blogs.js","Components/protected/Dashboard/blogs/blog_view.js","Components/protected/Dashboard/blogs/add_blog.js","Components/protected/Dashboard/users/users.js","Components/notFound/index.js","routes.js","serviceWorker.js","index.js","Helpers/config.js","Components/Academic/acc_bio.module.css"],"names":["module","exports","AppAuth","isAuthenticated","apptoken","user_id","user_email","navigator","cookieEnabled","this","localStorage","getItem","alert","props","code","token","user","id","email","setItem","removeItem","Login","showModal","setVisible","handleCancel","e","useState","visible","setApptoken","feedback","setFeedback","useEffect","M","AutoInit","useForm","register","handleSubmit","errors","to","Fragment","title","onOk","onCancel","className","onSubmit","data","url","URL","Buffer","from","username","password","toString","axios","get","headers","then","res","msg","authenticate","catch","err","styles","margin20","type","name","ref","required","htmlFor","ProtectedRoute","authenticated","Component","component","rest","render","appAuth","AppHeader","header","document","getElementById","sticky","offsetTop","window","onscroll","handleScrollHeader","sidenav","querySelector","Sidenav","init","addEventListener","elems","querySelectorAll","Collapsible","cls","pageYOffset","classList","add","remove","renderLogUser","aria-hidden","data-target","appFooter","footer_box","href","target","AppLayout","children","Mycarousel","state","slider_data","setState","console","log","mystyles","height","width","length","map","item","i","key","settings","infinite","speed","slidesToShow","slidesToScroll","sliderDataFunc","React","WelcomeHeader","blogs","setBlogs","welcome_header","style","margin","xs","sm","md","header_text","place_order","appauth","SideLeftPage","top","onClick","defaultSelectedKeys","defaultOpenKeys","mode","Item","AreaChartOutlined","template","FormOutlined","renderPlaceOrder","DollarCircleOutlined","FundProjectionScreenOutlined","SnippetsOutlined","MainPage","background","featured_image","ReactHtmlParser","body","substring","rowid","SideRightPage","Index","url_blog","fetchData","toast","error","gutter","lg","span","AppHome","AccPlaceOrder","blogCat","setBlogCat","blogFormat","setBlogFormat","blogLang","setBlogLang","wordcount","setWordcount","callFromServer","reset","stateset","fetch","response","json","marginTop","data2","FormData","post","encType","value","defaultValue","disabled","cats","displayOrderFormats","category_id","displayOrderCategories","format_id","displayOrderLang","onChange","event","val","calcWordcount","pages","word_count","multiple","AccBio","bio_img","backgroundImage","padding","src","alt","AccPayrates","AccBioDescription","class","bio_img_descr","header_descr","info_descr","AccServices","card_head","AccWorksamples","columns","dataIndex","sorter","compare","a","b","category","format","english","dataSource","action","pagination","filters","extra","Blogs","nodata","description","BlogSingle","blog_id","match","params","blog_rowid","blog","setBlog","setUser","comment","setComment","postview","setPostview","commentinfo","setCommentinfo","url_blog_view","url_user","url_blog_comments","blog_box","blog_img","blog_title","blog_cat","names","created_at","blog_cat_tag","CommentOutlined","LikeOutlined","url_blog_like","postData","marginRight","EyeOutlined","blog_comment_box","placeholder","trim","warning","success","setTimeout","addComment","logout","deAuthenticate","Content","Layout","Sider","SubMenu","Menu","AppDashboardLayout","collapsed","isUserAdmin","onCollapse","admin","undefined","minHeight","collapsible","theme","icon","HomeOutlined","pathname","archived","nil","TeamOutlined","BookOutlined","AudioOutlined","ToolOutlined","Dashboard","modal_visible","nil_orders","orders","archived_orders","order_formats","order_categories","blog_categories","fetch_totals","order_cats","blog_cats","data-badge-caption","NilOrders","nilorders","setNilorders","url_orders","nilorder_columns","label","options","filter","sort","empty","customBodyRender","rowData","marginLeft","nilorders_data","h3m20","textLabels","noMatch","toolTip","columnHeaderTooltip","column","next","previous","rowsPerPage","displayRows","toolbar","search","downloadCsv","print","viewColumns","filterTable","all","titleAria","selectableRows","Orders","setArchived","setNil","location","OrderView","nilorder","setNilorder","nilorderdocs","setNilorderdocs","url_orders_docs","orderComplete","check","info","reload","formats","orderViewHeader","order_number","orderViewDetails","lang","notes","updated_at","orderViewDocs","colspan","extension","status","fromNow","OrderFormat","orderformats","setOrderFormats","mvisible","setMvisible","modAction","setModAction","modHeader","setModHmodHeader","formattitle","setFormattitle","formatnotes","setFormatnotes","formatURL","setFormatURL","setRowid","url_order_formats","delRecord","confirmation","confirm","editOrderFormat","dat","archive","renderMdata","OrderCat","ordercats","setOrdercats","cattitle","setCattitle","catnotes","setCatnotes","catURL","setCattURL","url_order_cats","editOrderCat","OrderLang","orderlangs","setOrderlangs","langtitle","setLangtitle","langnotes","setLangnotes","langURL","setLangURL","url_order_langs","editOrderLang","BlogCat","blogcats","setBlogcats","setCatURL","url_blog_cats","editBlogCat","AdminBlogs","url_blogs","blogs_columns","blogs_data","marginBottom","blog_view","editor","post_body","blog_category_id","post_cats","post_id","handleEditorChange","content","submitData","preventDefault","formdata","append","post_title","elements","files","url_post_cats","url_post","displayPostCats","apiKey","tinymceKey","initialValue","plugins","onEditorChange","h50","for","Users","users","setUsers","setNames","setEmail","userURL","setUserURL","url_users","watch","useRef","current","user_columns","pattern","message","autoComplete","minLength","validate","password_repeat","Routes","path","exact","appHome","AccBioDescr","singleBlog","Logout","ArchivedOrders","PlaceOrder","AdminBlogCat","AdminAddBlog","AdminBlogView","NotFound","Boolean","hostname","ReactDOM","serviceWorker","ready","registration","unregister","Axios","g_data","p_data"],"mappings":"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","file":"static/js/main.c58010a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blog_box\":\"blogs_blog_box__1bO9c\",\"blog_img\":\"blogs_blog_img__2mBlk\",\"blog_title\":\"blogs_blog_title__XpTgm\",\"blog_cat\":\"blogs_blog_cat__31KGu\",\"blog_cat_tag\":\"blogs_blog_cat_tag__3aYwn\",\"blog_comment_box\":\"blogs_blog_comment_box__w32pK\"};","\r\n\r\nclass AppAuth{\r\n\r\n    constructor() {\r\n        if(navigator.cookieEnabled){\r\n            this.isAuthenticated = localStorage.getItem('isAuthenticated')\r\n            this.apptoken = localStorage.getItem('apptoken')\r\n            this.user_id = localStorage.getItem('user_id')\r\n            this.user_email = localStorage.getItem('user_email')\r\n        }else{\r\n            alert('Please unblock cokies to continue')\r\n            // this.deAuthenticate()\r\n        }\r\n    }\r\n\r\n\r\n    isAuthenticated = false;\r\n    apptoken = ''\r\n    user_id = null\r\n    user_email = null\r\n\r\n    authenticate (props) {\r\n        if(props.code === 1){\r\n            this.isAuthenticated = true\r\n            this.apptoken = props.token\r\n            this.user_id = props.user.id\r\n            this.user_email = props.user.email\r\n\r\n            localStorage.setItem(\"isAuthenticated\", this.isAuthenticated)\r\n            localStorage.setItem(\"apptoken\", this.apptoken)\r\n            localStorage.setItem(\"user_id\", this.user_id)\r\n            localStorage.setItem(\"user_email\", this.user_email)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    deAuthenticate (props) {\r\n        this.isAuthenticated = false\r\n        this.apptoken = null\r\n        localStorage.removeItem('isAuthenticated')\r\n        localStorage.removeItem('apptoken')\r\n        localStorage.removeItem('user_id')\r\n        localStorage.removeItem('user_email')\r\n    }\r\n}\r\n\r\n\r\nexport default new AppAuth","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"acc_placeorder_header__2k9yb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome_header\":\"welcomeheader_welcome_header__1385y\",\"header_text\":\"welcomeheader_header_text__1LuLF\",\"place_order\":\"welcomeheader_place_order__3bCG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"dashboard_header__1kwNt\",\"h3m20\":\"dashboard_h3m20__1q6s9\",\"orderViewHeader\":\"dashboard_orderViewHeader__1-rOU\",\"orderViewDocs\":\"dashboard_orderViewDocs__1FMjJ\",\"orderViewDetails\":\"dashboard_orderViewDetails__2v1O8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_box\":\"appfooter_footer_box__u1kPf\"};","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport { Modal } from 'antd';\r\nimport AppAuth from '../../appauth'\r\n\r\n\r\n// styles\r\nimport styles from './auth.module.css'\r\n\r\n// import helpers\r\nimport { URL } from '../../Helpers/config'\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n\r\n    // modal funcs\r\n    const showModal = () => {\r\n        setVisible(true)\r\n      };\r\n    \r\n      const handleOk = e => {\r\n        // console.log(e);\r\n        setVisible(false)\r\n      };\r\n    \r\n     const  handleCancel = e => {\r\n        // console.log(e);\r\n        setVisible(false)\r\n    }\r\n    // modal end\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [apptoken, setApptoken] = useState('');\r\n    const [feedback, setFeedback] = useState(\"processing ...\");\r\n\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n\r\n    },[])\r\n\r\n\r\n\r\n    // submit data\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = data => {\r\n\r\n        let url = `${URL}/api/login`\r\n\r\n        let token = Buffer.from(`${data.username}:${data.password}`, 'utf8').toString('base64')\r\n\r\n        showModal()\r\n\r\n\r\n        if(navigator.cookieEnabled){\r\n\r\n            axios.get(url,{ headers: {\r\n                    'Authorization': `Basic ${token}`\r\n                }})\r\n                .then(res => {\r\n        \r\n                    handleCancel()\r\n                    if(res.data.code === 1){\r\n        \r\n                        setFeedback(res.data.msg)\r\n                        setApptoken(res.data.token)\r\n        \r\n                        AppAuth.authenticate(res.data)\r\n        \r\n                    }else{\r\n        \r\n                        setFeedback(res.data.msg)\r\n        \r\n                    }\r\n                    showModal()\r\n                })\r\n                .catch(err => {\r\n                    setFeedback(\"Fatal error\")\r\n                })\r\n            }else{\r\n                setFeedback(\"Please enable cookies to continue\")\r\n            }\r\n        }\r\n\r\n\r\n    const lets_redirect = AppAuth.isAuthenticated\r\n\r\n    if (lets_redirect === true){\r\n        // window.location.reload()\r\n        return (\r\n            <Redirect to='/dashboard' />\r\n            )\r\n    }\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n\r\n            <Modal\r\n                title=\"Please wait\"\r\n                visible={visible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                >\r\n                <p id=\"processing_data\"> { feedback }</p>\r\n            </Modal>\r\n\r\n            <div className=\"container\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={\"row \" + styles.margin20}>\r\n                    <h5>Login here with your credentials </h5>\r\n                    <div className=\"input-field col s12\">\r\n                        <input  id=\"email\" type=\"email\" name=\"username\" className=\"validate\" ref={register({ required: true })} />\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        {errors.username && <span className=\"red_message\">This field is required</span>}\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                        <input id=\"passwd\" type=\"password\" name=\"password\" className=\"validate\" ref={register({ required: true })} />\r\n                        <label htmlFor=\"passwd\">Password</label>\r\n                        {errors.password && <span className=\"red_message\">This field is required</span>}\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s12\">\r\n                        <input  type=\"submit\" className=\"button\" />\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"margin20\":\"auth_margin20__324rl\"};","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n// dependencies\r\nimport appAuth from '../appauth'\r\n\r\nexport default function ProtectedRoute({\r\n    authenticated,\r\n    component: Component,\r\n    ...rest\r\n}) {\r\n    return (\r\n        <React.Fragment>\r\n            \r\n\r\n\r\n            <Route {...rest}  render={props => (\r\n                appAuth.isAuthenticated ? <Component  {...props} /> : <Redirect to=\"/login\" />\r\n            )}/>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport AppAuth from '../../../appauth'\r\n\r\nimport './header.css';\r\n\r\nexport default function AppHeader() {\r\n\r\n    useEffect(() => {\r\n\r\n    \r\n        var header = document.getElementById(\"myHeader\");\r\n        var sticky = header.offsetTop;\r\n        window.onscroll = function() {\r\n          handleScrollHeader(header, sticky, 'sticky')\r\n        };\r\n    \r\n        \r\n        let sidenav = document.querySelector('.sidenav');\r\n        M.Sidenav.init(sidenav, {});\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n          var elems = document.querySelectorAll('.collapsible');\r\n          M.Collapsible.init(elems);\r\n        });\r\n      }, [])\r\n      const handleScrollHeader = (header, sticky, cls) => {\r\n        if (window.pageYOffset > sticky) {\r\n          header.classList.add(cls);\r\n        } else {\r\n          header.classList.remove(cls);\r\n        }\r\n      }\r\n\r\n      \r\n\r\n\r\n      const renderLogUser = () => {\r\n        let template = null\r\n        \r\n        if(AppAuth.isAuthenticated) {\r\n          template = <>\r\n                      <li><Link to=\"/dashboard\">Dashboard</Link></li>\r\n                      <li><Link to=\"/logout\">Logout</Link></li>\r\n                    </>\r\n\r\n        }else{\r\n          template = <li><Link to=\"/login\">Login</Link></li>\r\n\r\n        }\r\n        \r\n          \r\n\r\n        return template\r\n      }\r\n\r\n\r\n      renderLogUser()\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <div className=\"row headTop\">\r\n                {/* <div className=\"col s12\">This div is 12-columns wide on all screen sizes</div> */}\r\n                  <div className=\"col s4\">\r\n                  <i className=\"fa fa-facebook-official f_icon\" aria-hidden=\"true\"></i> \r\n                  <i className=\"fa fa-instagram f_icon\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-twitter-square f_icon\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-linkedin-square f_icon\" aria-hidden=\"true\"></i>\r\n                  </div>\r\n                  <div className=\"col s8\">\r\n                    <div className=\"right-align\">\r\n                        <strong> <i className=\"fa fa-phone-square f_icon\" aria-hidden=\"true\"></i> +254 704 147029 </strong> \r\n                        <p className=\"hide-on-med-and-up\"></p>\r\n                        <strong> <i className=\"fa fa-envelope f_icon ml-2\" aria-hidden=\"true\"></i> support@nyenjeri.com </strong>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <nav className=\"nav_bar nav-wrapper stick_them\" id=\"myHeader\">\r\n                <div className=\"\">\r\n                  <Link to=\"/\" className=\"brand-logo\" >Nyenjeri.com</Link>\r\n                  <Link to=\"#!\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\r\n                    <i className=\"material-icons\">menu</i>\r\n                  </Link>\r\n\r\n                  <ul className=\"right hide-on-med-and-down\">\r\n                      <li><Link to=\"/acc_bio\">Academic</Link></li>\r\n                      <li><Link to=\"/blogs\">Blogs</Link></li>\r\n                      <li><Link to=\"/\">Jobs</Link></li>\r\n                      <li><Link to=\"/\">Contact</Link></li>\r\n                      <li><Link to=\"/\">About Us</Link></li>\r\n                      {renderLogUser()}\r\n                  </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <ul className=\"sidenav\" id=\"mobile-demo\">\r\n              <li><Link to=\"/acc_bio\">Academic</Link></li>\r\n              <li><Link to=\"/blogs\">Blogs</Link></li>\r\n              <li><Link to=\"/\">Jobs</Link></li>\r\n              <li><Link to=\"/\">Contact</Link></li>\r\n              <li><Link to=\"/\">About Us</Link></li>\r\n              {renderLogUser()}\r\n            </ul>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\n// styles\r\nimport styles from './appfooter.module.css'\r\n\r\nexport default function appFooter() {\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div className=\"\">\r\n                <div className={styles.footer_box}>\r\n                    This is the footer where we will disdiv cllay some information \r\n                    <p>Made with love by <a className=\"greenBlue\" href=\"https://www.youtube.com\" target=\"blank\"> DigiFix </a> </p>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n\r\n\r\n// from antd\r\n// import { Layout  } from 'antd';\r\n\r\n// components\r\nimport AppHeader from './header/appheader'\r\nimport AppFooter from './footer/appFooter'\r\n\r\n\r\n// styles\r\nimport  './applayout.css'\r\n\r\n\r\n// instanciations\r\n// const {  Footer } = Layout;\r\n\r\nexport default function AppLayout(props) {\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <AppHeader/>\r\n\r\n\r\n                {props.children}\r\n\r\n\r\n           \r\n            <AppFooter />\r\n\r\n\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\n\r\nclass Mycarousel extends React.Component {\r\n\r\n  state = {\r\n    slider_data: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    let slider_data = this.props.data\r\n    this.setState({ \r\n      slider_data\r\n     })\r\n    console.log({slider_data})\r\n  }\r\n\r\n\r\n  sliderDataFunc () {\r\n    var mystyles = {\r\n      height: this.props.height+'rem',\r\n      width: '100%'\r\n    }\r\n    let template = null\r\n    if (this.state.slider_data.length < 1){\r\n      template= (\r\n        <>\r\n          <div>\r\n            <img src='/images/Home Page 1.PNG' style={{...mystyles}}  alt=\"\"/>\r\n          </div>\r\n          <div>\r\n            <img src='/images/Donate page 2.PNG' style={{...mystyles}}  alt=\"\"/>\r\n          </div>\r\n          <div>\r\n            <img src='/images/Donate page 1.PNG' style={{...mystyles}}  alt=\"\"/>\r\n          </div>\r\n          <div>\r\n            <img src='/images/Homepage 3.PNG' style={{...mystyles}}  alt=\"\"/>\r\n          </div>\r\n        </>\r\n      )\r\n    }else {\r\n      console.log(this.state.slider_data);\r\n      template =(\r\n        this.state.slider_data.map((item, i) => (\r\n          <div key={i}>\r\n            {/* <img src={${URL}`/api/uploads/blog_images/`${item.featured_image}} style={{...mystyles}}  alt={item.title}/> */}\r\n          </div>\r\n        ))\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    var settings = {\r\n      // dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n\r\n    \r\n    return (\r\n      <Slider {...settings}>\r\n        {this.sliderDataFunc()}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Mycarousel;","import React, { useState, useEffect } from 'react'\r\n\r\nimport {  Row, Col } from 'antd';\r\n\r\n// components\r\nimport Maincarousel from '../../Widgets/Carousel/Main/maincarousel';\r\nimport appauth from '../../appauth'\r\n\r\n// styles\r\nimport styles from './welcomeheader.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function WelcomeHeader(props) {\r\n    // states\r\n    const [blogs, setBlogs] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const blogs = props.data;\r\n        setBlogs(blogs)\r\n        console.log({blogs});\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {/* welcome header */}\r\n            <div className={styles.welcome_header}>\r\n\r\n\r\n                <Row style={{margin: '2.3rem'}}>\r\n\r\n                    <Col xs={24} sm={14} md={16}>\r\n\r\n                        <div className={styles.header_text}>\r\n                            <h4>Competent Blogger and writer</h4> <hr />\r\n                            <p>\r\n                                React Mobile navbar is a horizontal navigation component which apart from traditional, text links, might embed also icons.\r\n                                Basic exampl\r\n                            </p>\r\n                            <div className={styles.place_order}>\r\n                                {\r\n                                    appauth.isAuthenticated ? \r\n                                        <Link to=\"/placeOrder\" className=\"btn waves-effect waves-light green\">\r\n                                            Place order\r\n                                        </Link>   \r\n                                        : \r\n                                        <Link to=\"/acc_placeorder\" className=\"btn waves-effect waves-light green\">\r\n                                            Place order\r\n                                        </Link>                             \r\n                                }\r\n                            </div>\r\n\r\n                        </div> \r\n\r\n                    </Col>\r\n\r\n                    <Col xs={24} sm={8} md={8}>\r\n                        <Maincarousel height={15} data={blogs}/>\r\n                    </Col>\r\n\r\n                    \r\n                </Row>\r\n            </div>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {   Affix, Menu  } from 'antd';\r\n\r\n\r\n// dependencies\r\nimport { AreaChartOutlined,\r\n    FundProjectionScreenOutlined, DollarCircleOutlined, \r\n     SnippetsOutlined, FormOutlined\r\n} \r\nfrom '@ant-design/icons';\r\nimport appAuth from '../../appauth'\r\n\r\nexport default function SideLeftPage(props) {\r\n\r\n    console.log();\r\n    \r\n\r\n    const [top] = useState(100);\r\n\r\n    const handleClick = e => {\r\n        console.log('click ', e);\r\n    };\r\n\r\n    const renderPlaceOrder = () => {\r\n        let template = null\r\n        if(!appAuth.isAuthenticated){\r\n            template = <Menu.Item> \r\n                            <FormOutlined /> <Link to=\"/acc_placeorder\"> Place an Order </Link> \r\n                        </Menu.Item>\r\n\r\n        }\r\n        return template\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            \r\n            <div className='hide-on-small-only' style={{ height: ''}}>\r\n\r\n                <Affix offsetTop={top}>\r\n\r\n                    <Menu\r\n                    onClick={handleClick}\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    className=\"sidemenu shadow h50\"\r\n\r\n                    >\r\n\r\n                        <Menu.Item>\r\n                            <AreaChartOutlined /> <Link to=\"/acc_bio\"> Academic Bio </Link> \r\n                        </Menu.Item>\r\n\r\n                        {\r\n                            renderPlaceOrder()\r\n                        }\r\n\r\n                        \r\n                        <Menu.Item> \r\n                            <DollarCircleOutlined /> <Link to=\"/acc_payrates\"> Pay Rates </Link>  \r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item> \r\n                            <FundProjectionScreenOutlined /> <Link to=\"/acc_services\"> Services </Link>  \r\n                        </Menu.Item>\r\n\r\n                        <Menu.Item> \r\n                            <SnippetsOutlined />  <Link to=\"/acc_worksamples\"> Work Samples </Link>  \r\n                        </Menu.Item>\r\n\r\n                    </Menu>  \r\n\r\n                </Affix>              \r\n\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n// dependencies\r\nimport Maincarousel from '../../Widgets/Carousel/Main/maincarousel';\r\nimport M from 'materialize-css';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL } from '../../Helpers/config'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function MainPage(props) {\r\n\r\n\r\n\r\n    // states\r\n    const [blogs, setBlogs] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const blogs = props.data;\r\n        setBlogs(blogs)\r\n    }, [])\r\n\r\n\r\n    const loadBlogs = () => {\r\n        let template = null\r\n        if (blogs.length < 1) {\r\n            template =\r\n                <div className=\"material-table card\">\r\n                    <p> No Data Available</p>\r\n                </div>\r\n        } else {\r\n            template =\r\n                <div className=\"material-table card\">\r\n                    {\r\n                        blogs.map((item, i) => (\r\n                            <div className=\"card horizontal\" key={i}>\r\n                                <div className=\"card-image imageDiv\"\r\n                                    style={{\r\n                                        background: `url('${URL}/api/uploads/blog_images/${item.featured_image}')`\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                                <div className=\"card-stacked\">\r\n                                    <div className=\"card-content\">\r\n                                        {ReactHtmlParser(item.body.substring(0, 200))} <b> ... </b>\r\n\r\n                                    </div>\r\n                                    <div className=\"card-action right-align\">\r\n                                        <Link to={`/single_blog/${item.rowid}/${item.id}/${item.user_id}`} className=\"waves-effect waves-light btn-small\"> View </Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n        }\r\n        return template\r\n    }\r\n\r\n\r\n    if (blogs.length < 1) {\r\n        return (<div className=\"card material-table\">\r\n                    <ToastContainer />\r\n                    <h3>Hey Wellcome</h3>\r\n                    <p className=''> Loading Data ... </p>\r\n                </div>)\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n    \r\n    \r\n                {/* header tag on phone */}\r\n                <div className=\"hide-on-med-and-up\">\r\n                    <h4>News</h4>\r\n                    <div className='divider'></div>\r\n                </div>\r\n                <ToastContainer />\r\n    \r\n                {/* slider for news */}\r\n                <Maincarousel height={25} data={blogs}/> \r\n    \r\n                <div className=\"col s12 m7\">\r\n    \r\n                    {/* header on lg devices */}\r\n                    <h4 className=\"\">News</h4>\r\n    \r\n                    {/* cards for news */}\r\n                    {\r\n                        loadBlogs()\r\n                    }\r\n    \r\n                </div>\r\n    \r\n    \r\n    \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n","import React, { useState} from 'react';\r\nimport {   Affix  } from 'antd';\r\n\r\nexport default function SideRightPage(props) {\r\n\r\n    const [top] = useState(100);\r\n\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n                \r\n                    <div className=\"pad_top\" id=\"top_sticker_left\">\r\n                        <Affix offsetTop={top}>\r\n                            <ul className=\"collapsible\">\r\n                            <li className=\"active\">\r\n                                <div className=\"collapsible-header\"><i className=\"material-icons\">filter_drama</i>First</div>\r\n                                <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                            </li>\r\n                            <li className=\"active\">\r\n                                <div className=\"collapsible-header \"><i className=\"material-icons\">place</i>Second</div>\r\n                                <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"collapsible-header \"><i className=\"material-icons\">whatshot</i>Third</div>\r\n                                <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                            </li>\r\n                            </ul>\r\n                        </Affix>\r\n                    </div>\r\n              \r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n// antd styles\r\nimport { Layout, Row, Col  } from 'antd';\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\n// import helpers\r\nimport { URL, fetchData } from '../../Helpers/config'\r\nimport appauth from '../../appauth';\r\n\r\n// components\r\nimport WelcomeHeader from './welcomeheader'\r\nimport SideLeftPage from './sideleftpage'\r\nimport MainPage from './mainpage'\r\nimport SideRightPage from './siderightpage'\r\n\r\nexport default function Index(props) {\r\n\r\n    // states\r\n    const [blogs, setBlogs] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        M.AutoInit();\r\n\r\n        let url_blog = `${URL}/api/blogs?_token=${appauth.apptoken}` \r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_blog, {data}).then(data=>{\r\n            console.log(data);\r\n            \r\n            if(data.code === -1){\r\n                toast.error(\"Fatal Error while fetching data\")\r\n            }else{\r\n                (data.msg.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setBlogs(data.msg.msg)\r\n            }\r\n            \r\n        })\r\n\r\n    },[])\r\n\r\n    if(blogs.length < 1 ){\r\n\r\n        return (<div className=\"card material-table\">\r\n            <ToastContainer />\r\n            <h3>Hey Wellcome</h3>\r\n            <p className=''> Loading Data ... </p>\r\n        </div>)\r\n\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n    \r\n    \r\n                <Layout className=\"layout\">\r\n    \r\n                    <WelcomeHeader  data={blogs}/>\r\n    \r\n                    {/* body page */}\r\n                    <Row gutter={16}>\r\n    \r\n    \r\n    \r\n    \r\n                        {/* left side  */}\r\n                        <Col xs={24} md={6} lg={6} className=\"gutter-row\" span={6}>\r\n    \r\n                            <SideLeftPage/> \r\n    \r\n                        </Col>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n                        {/* main column */}\r\n                        <Col xs={24} md={12} lg={12}>\r\n    \r\n                            <MainPage  data={blogs}/>\r\n    \r\n                        </Col>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n                        {/* right side */}\r\n                        <Col xs={24} md={6}  lg={6}>\r\n    \r\n                            <SideRightPage/>\r\n    \r\n                        </Col>\r\n    \r\n                    </Row>\r\n    \r\n                </Layout>\r\n    \r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n// components\r\nimport LandingPage from '../langingpage/'\r\n\r\nexport default function AppHome(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <LandingPage/>  \r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport { Modal } from 'antd';\r\n\r\n// widjets\r\n// import ModalProcessing from '../../Widgets/Modal/modal_processing'\r\n\r\n// styles\r\nimport styles from './acc_placeorder.module.css'\r\n\r\n\r\n// import helpers\r\nimport { URL } from '../../Helpers/config'\r\n \r\n\r\n\r\n\r\nexport default function AccPlaceOrder(props) {\r\n\r\n    // decrare states\r\n    const [blogCat, setBlogCat] = useState([]);\r\n    const [blogFormat, setBlogFormat] = useState([]);\r\n    const [blogLang, setBlogLang] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [feedback, setFeedback] = useState(\"processing ...\");\r\n    const [wordcount, setWordcount] = useState(275);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n\r\n        // call categories\r\n        callFromServer(`${URL}/api/order_cat`, setBlogCat)\r\n        // formats\r\n        callFromServer(`${URL}/api/order_format`, setBlogFormat)\r\n        // lang\r\n        callFromServer(`${URL}/api/order_lang`, setBlogLang)\r\n\r\n\r\n        // fetch(`${URL}/api/order_cat`)\r\n        // .then(response => response.json())\r\n        // .then(data => {\r\n        //     setBlogCat(data)\r\n        // })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const { register,reset, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = data => {\r\n\r\n\r\n        \r\n        let url = `${URL}/api/nil_order`\r\n        \r\n        let data2 = new FormData(document.querySelector(\"#nil_order\"));\r\n        \r\n        showModal()\r\n        axios.post(url, data2)\r\n        .then(res => {\r\n\r\n            handleCancel()\r\n            if(res.data.code === 1){\r\n                setFeedback(\"Data was posted Successfully \")\r\n                reset()\r\n                setWordcount(275)\r\n            }else{\r\n                setFeedback(\"An error occured\")\r\n            }\r\n            showModal()\r\n        })\r\n        .catch(err => {\r\n            console.error(err)\r\n        })\r\n    };\r\n\r\n\r\n    const calcWordcount = (event) => {\r\n        let val = event.target.value * 275\r\n        setWordcount(val)\r\n    }\r\n\r\n\r\n\r\n    // call data from server\r\n    const callFromServer = (url, stateset) => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            stateset(data)\r\n        })\r\n    }\r\n\r\n    const displayOrderCategories = () => {\r\n        // console.log({blogCat})\r\n        \r\n        if(blogCat.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogCat.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // formats\r\n    const displayOrderFormats = () => {\r\n        // console.log({blogFormat})\r\n        \r\n        if(blogFormat.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogFormat.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // displayOrderLang\r\n    const displayOrderLang = () => {\r\n        // console.log({blogFormat})\r\n        \r\n        if(blogLang.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogLang.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // modal funcs\r\n    const showModal = () => {\r\n        setVisible(true)\r\n      };\r\n    \r\n      const handleOk = e => {\r\n        // console.log(e);\r\n        setVisible(false)\r\n      };\r\n    \r\n     const  handleCancel = e => {\r\n        // console.log(e);\r\n        setVisible(false)\r\n    }\r\n    // modal end\r\n  return (\r\n\r\n    <div className=\"container\">\r\n\r\n        <div className=\"row\">\r\n            <div className={styles.header + \" col s12\"}>\r\n\r\n\r\n                <div className= 'section' style={{marginTop: '6rem'}}>\r\n\r\n                    <h4> Place your order     </h4>\r\n                    <p> We will commounicate to you for more details </p>\r\n\r\n\r\n                    {/* <ModalProcessing ref=\"child\"/> */}\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n\r\n            <div className=\"col s12\">\r\n\r\n\r\n                    <Modal\r\n                        title=\"Please wait\"\r\n                        visible={visible}\r\n                        onOk={handleOk}\r\n                        onCancel={handleCancel}\r\n                        >\r\n                        <p id=\"processing_data\"> { feedback }</p>\r\n                    </Modal>\r\n\r\n                    <div className=\"section\">\r\n\r\n                        {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\r\n                        <form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\" id=\"nil_order\">\r\n\r\n                            <input type=\"hidden\" value='00' name=\"user_id\" ref={register()}/>\r\n                            <input type=\"hidden\" defaultValue={'Y'} name=\"nil\" ref={register()}/>\r\n\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"email\" name=\"email\" type=\"text\" className=\"validate\" ref={register({ required: true })}/>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                {errors.email && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"title\" name=\"title\" type=\"text\" className=\"validate\" ref={register({ required: true })}/>\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                {errors.title && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"col s4\">\r\n                                <label htmlFor=\"category\">Category</label>\r\n                                <select id=\"category\"  className=\"browser-default\" name=\"category_id\" ref={register({ required: true })}>\r\n                                    <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                    { displayOrderFormats() }\r\n                                </select>\r\n                                {errors.category_id && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"col s4\">\r\n                                <label htmlFor=\"format\">Format</label>\r\n                                <select id=\"format\" className=\"browser-default\" name=\"format_id\" ref={register({ required: true })}>\r\n                                     <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                    { displayOrderCategories() }\r\n                                    \r\n                                </select>\r\n                                {errors.format_id && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"col s4\">\r\n                                <label htmlFor=\"language\">Language</label>\r\n                                <select id=\"language\" className=\"browser-default\"  name=\"language_id\" ref={register({ required: true })}>\r\n                                    <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                    { displayOrderLang() }\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s4\">\r\n                                <input id=\"pages\" name=\"pages\" type=\"number\" className=\"validate\"  ref={register({ required: true })} onChange = {(e) => calcWordcount(e)}/>\r\n                                <label htmlFor=\"pages\">Page(s)</label>\r\n                                {errors.pages && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s4\">\r\n                                <input id=\"word_count\" name=\"word_count\" type=\"number\" className=\"validate\" value={wordcount} ref={register({ required: true })} onChange = {(e) => setWordcount(e.target.value)}/>\r\n                                <label htmlFor=\"word_count\">Word Count</label>\r\n                                {errors.word_count && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <i className=\"material-icons prefix\">mode_edit</i>\r\n                                <textarea id=\"notes\" name=\"notes\" className=\"materialize-textarea\"></textarea>\r\n                                <label htmlFor=\"notes\">Notes</label>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"input-field col s12\">\r\n\r\n                                    <p> Documents <small> <i> - (hold CTRL to select multiple docs)</i></small> </p>\r\n                                    <input type=\"file\" id=\"docs\" className=\"browser-default\" name=\"file\" multiple />\r\n                                \r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n\r\n                            <input className=\"btn\" type=\"submit\" />\r\n                        </div>\r\n                        \r\n                        </form>\r\n\r\n                    </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n    \r\n  );\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n// styles\r\nimport styles from './acc_bio.module.css'\r\nimport SideLeftPage from '../langingpage/sideleftpage'\r\n\r\nexport default function AccBio() {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"Xcontainer\">\r\n\r\n\r\n                <div  className=\"row\">\r\n                    <div className=\"col s0 m3\">\r\n                        <SideLeftPage />\r\n                    </div>\r\n                    <div className=\"col s12 m9 green\">\r\n\r\n\r\n                        <div className=\"row card\" style={{ margin: '1rem' }}>\r\n                            \r\n                            <div className=\"col s12 m6\">\r\n                                <div className={styles.bio_img} style={{\r\n                                    backgroundImage: `url('/images/people-group-cover.png')`\r\n                                }}>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col s12 m6\" style={{ marginTop: \"6rem\"}}>\r\n\r\n                                <h4 className=\"Xcenter-align\"> Bio</h4>\r\n\r\n                                <div className=\"divider\"></div>\r\n\r\n                                <div className=\"section\">\r\n                                    <p>\r\n                                    Why do we use it?\r\n                                    It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n\r\n                                    </p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        \r\n                            <div className=\"col s12\">\r\n\r\n                                <h4 style={{padding: '2rem 0'}}> Hot Deals</h4> <hr/>\r\n\r\n                                <div className=\"row\">\r\n\r\n\r\n\r\n                                    <div className=\"col s12 m4\">\r\n\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-image\">\r\n                                            <img src=\"images/Blog-Promotion-101-Illustration-Feature_1290x688_KL.jpg\" alt=\"\" />\r\n                                            <span className=\"card-title\">Card Title</span>\r\n\r\n                                            <Link to=\"/acc_bio_descr\" className=\"btn-floating halfway-fab waves-effect waves-light red\"><i className=\"material-icons\">add</i></Link>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-content\">\r\n                                            <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* card */}\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col s12 m4\">\r\n\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-image\">\r\n                                            <img src=\"images/blogs-and-articles-500x500.jpg\" alt=\"\"/>\r\n                                            <span className=\"card-title\">Card Title</span>\r\n                                            <a className=\"btn-floating halfway-fab waves-effect waves-light red\"><i className=\"material-icons\">add</i></a>\r\n                                            </div>\r\n                                            <div className=\"card-content\">\r\n                                            <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* card */}\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col s12 m4\">\r\n\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-image\">\r\n                                            <img src=\"images/blogs-versus-articles.jpg\" />\r\n                                            <span className=\"card-title\">Card Title</span>\r\n                                            <a className=\"btn-floating halfway-fab waves-effect waves-light red\"><i className=\"material-icons\">add</i></a>\r\n                                            </div>\r\n                                            <div className=\"card-content\">\r\n                                            <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* card */}\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n// styles\r\nimport styles from './acc_bio.module.css'\r\nimport SideLeftPage from '../langingpage/sideleftpage'\r\n\r\nexport default function AccPayrates(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"Xcontainer\">\r\n\r\n                <div  className=\"row\">\r\n                        <div className=\"col s0 m3\">\r\n                            <SideLeftPage />\r\n                        </div>\r\n                        <div className=\"col s12 m9 green\">\r\n\r\n                            <div className=\"row card\" style={{ margin: '1rem' }}>\r\n                                \r\n                                <div className=\"col s12 m6\">\r\n                                    <div className={styles.bio_img} style={{\r\n                                        backgroundImage: `url('/images/0318_RW_Marconi.jpg')`\r\n                                    }}>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col s12 m6\" style={{ marginTop: \"6rem\"}}>\r\n\r\n                                    <h4 className=\"Xcenter-align\"> Pay Rates</h4>\r\n\r\n                                    <div className=\"divider\"></div>\r\n\r\n                                    <div className=\"section\">\r\n                                        <ul className=\"collection\">\r\n                                            \r\n                                            <li className=\"collection-item avatar\">\r\n                                            <i className=\"material-icons circle\">folder</i>\r\n                                            <span className=\"title\">Basic Package</span>\r\n                                                <ul className=\"collection\">\r\n                                                    <li className=\"collection-item\"> Pantual Deliverly </li>\r\n                                                    <li className=\"collection-item\"> Online Support  </li>\r\n                                                    <li className=\"collection-item\"> Online Support2  </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li className=\"collection-item avatar\">\r\n                                            <i className=\"material-icons circle green\">insert_chart</i>\r\n                                            <span className=\"title\">Premium Package</span>\r\n                                                <ul className=\"collection\">\r\n                                                    <li className=\"collection-item\"> Pantual Deliverly </li>\r\n                                                    <li className=\"collection-item\"> Online Support  </li>\r\n                                                    <li className=\"collection-item\"> Online Support2  </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li className=\"collection-item avatar\">\r\n                                            <i className=\"material-icons circle red\">play_arrow</i>\r\n                                            <span className=\"title\">Platinum Package</span>\r\n                                                <ul className=\"collection\">\r\n                                                    <li className=\"collection-item\"> Pantual Deliverly </li>\r\n                                                    <li className=\"collection-item\"> Online Support  </li>\r\n                                                    <li className=\"collection-item\"> Online Support2  </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            \r\n                            \r\n                            </div>\r\n                        \r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n// styles\r\nimport styles from './acc_bio.module.css'\r\n\r\nexport default function AccBioDescription(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n\r\n                <div class=\"row\">\r\n\r\n\r\n                    <div class=\"col s12\">\r\n\r\n                    <div className={styles.bio_img_descr} style={{\r\n                            backgroundImage: `url('/images/blogs.jpg')`\r\n                        }}></div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col s12\">\r\n                        <h4 className={styles.header_descr}>Test env</h4>\r\n                        <div className=\"divider\"></div>\r\n                        <p className={styles.info_descr} >I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n// styles\r\nimport styles from './acc_bio.module.css'\r\nimport SideLeftPage from '../langingpage/sideleftpage'\r\n\r\nexport default function AccServices() {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"Xcontainer\">\r\n\r\n            <div  className=\"row\">\r\n                    <div className=\"col s0 m3\">\r\n                        <SideLeftPage />\r\n                    </div>\r\n                    <div className=\"col s12 m9 green\">\r\n\r\n                        <div className=\"row card\" style={{ margin: '1rem' }}>                    \r\n                            \r\n                        \r\n                            <div className=\"col s12\">\r\n\r\n                                <h4 style={{padding: '2rem 0 0 0'}}> Our Services</h4> <hr/>\r\n\r\n                                <div className=\"row\" style={{padding: '2rem 0'}}>\r\n\r\n\r\n                                    <div className=\"col s12 m4\">\r\n\r\n\r\n                                        <div className=\"card\">\r\n\r\n                                            <div className=\"card-image\">\r\n                                                <img src=\"images/Blog-Promotion-101-Illustration-Feature_1290x688_KL.jpg\" alt=\"\"/>\r\n                                            </div>\r\n\r\n                                            <p className={\"card-title text-center \" +styles.card_head }>Card Title</p>\r\n\r\n                                            <div className=\"card-content\">\r\n                                                <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* card */}\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col s12 m4\">\r\n\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-image\">\r\n                                                <img src=\"images/blogs-and-articles-500x500.jpg\"  alt=\"\"/>\r\n                                            </div>\r\n                                            <p className={\"card-title text-center \" +styles.card_head }>Card Title</p>\r\n                                            <div className=\"card-content\">\r\n                                                <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* card */}\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col s12 m4\">\r\n\r\n\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-image\">\r\n                                                <img src=\"images/blogs-versus-articles.jpg\"  alt=\"\"/>\r\n                                            </div>\r\n                                            <p className={\"card-title text-center \" +styles.card_head }>Card Title</p>\r\n                                            <div className=\"card-content\">\r\n                                                <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* card */}\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    </div>\r\n            </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n// dependencies\r\nimport { Table } from 'antd';\r\n\r\n// styles\r\nimport SideLeftPage from '../langingpage/sideleftpage';\r\n\r\nexport default function AccWorksamples() {\r\n    const columns = [\r\n        {\r\n          title: 'Title',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: 'Category',\r\n          dataIndex: 'category',\r\n          sorter: {\r\n            compare: (a, b) => a.category - b.category,\r\n            multiple: 3,\r\n          },\r\n        },\r\n        {\r\n          title: 'Format',\r\n          dataIndex: 'format',\r\n          sorter: {\r\n            compare: (a, b) => a.format - b.format,\r\n            multiple: 2,\r\n          },\r\n        },\r\n        {\r\n          title: 'Description',\r\n          dataIndex: 'english',\r\n          sorter: {\r\n            compare: (a, b) => a.english - b.english,\r\n            multiple: 1,\r\n            \r\n          },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n        }\r\n      ];\r\n      \r\n      const data = [\r\n        {\r\n          key: '1',\r\n          name: 'John Brown',\r\n          category: 'Research',\r\n          format: 'APA',\r\n          english: 'A river between two sources',\r\n          action: 'Download'\r\n        },\r\n        {\r\n          key: '2',\r\n          name: 'Jim Green',\r\n          category: 98,\r\n          format: 66,\r\n          english: 89,\r\n        },\r\n        {\r\n          key: '3',\r\n          name: 'Joe Black',\r\n          category: 98,\r\n          format: 90,\r\n          english: 70,\r\n        },\r\n        {\r\n          key: '4',\r\n          name: 'Jim Red',\r\n          category: 88,\r\n          format: 99,\r\n          english: 89,\r\n        },\r\n      ];\r\n\r\n      function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n      }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"Xcontainer\">\r\n\r\n                <div  className=\"row\">\r\n                        <div className=\"col s3 \">\r\n                            <SideLeftPage />\r\n                        </div>\r\n                        <div className=\"col s12 m9 green\">\r\n\r\n                          <div className=\"row card\" style={{ margin: '1rem' }}>                  \r\n                              \r\n                          \r\n                              <div className=\"col s12\">\r\n\r\n                                  <h4 style={{padding: '2rem 0'}}> Work Samples</h4> <hr/>\r\n\r\n                                  <div className=\"row\">\r\n\r\n\r\n                                      <Table columns={columns} dataSource={data} onChange={onChange} />\r\n\r\n                                  </div>\r\n\r\n                              </div>\r\n                          </div>\r\n                      \r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// components\r\nimport Maincarousel from '../../Widgets/Carousel/Main/maincarousel';\r\n\r\n// styles\r\nimport styles from './blogs.module.css'\r\n\r\nimport M from 'materialize-css';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL, fetchData } from '../../Helpers/config'\r\nimport appauth from '../../appauth';\r\n\r\nexport default function Blogs() {\r\n\r\n\r\n    // states\r\n    const [blogs, setBlogs] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        M.AutoInit();\r\n\r\n        let url_blog = `${URL}/api/blogs?_token=${appauth.apptoken}` \r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_blog, {data}).then(data=>{\r\n            console.log(data);\r\n            \r\n            if(data.code === -1){\r\n                toast.error(\"Fatal Error while fetching data\")\r\n            }else{\r\n                (data.msg.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setBlogs(data.msg.msg)\r\n            }\r\n            \r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    const blogCard = () => {\r\n        let template = null\r\n      \r\n\r\n        template = blogs.map((item, i) => (\r\n\r\n            <div className=\"card horizontal\" key={i}>\r\n\r\n                <div className=\"card-image imageDiv\" \r\n                        style={{ \r\n                        background: `url('${URL}/api/uploads/blog_images/${item.featured_image}')`\r\n                        }}\r\n                    >\r\n                </div>\r\n\r\n                <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                    <h5> {item.title.substring(0, 25)} ... </h5>\r\n                    <div className=\"divider\"></div>\r\n                    { ReactHtmlParser(item.description.substring(0, 300)) } <b> ... </b>\r\n                </div>\r\n\r\n                    <div className=\"card-action right-align\">\r\n                        <Link to={`/single_blog/${item.rowid}/${item.id}/${item.user_id}`} className=\"waves-effect waves-light btn-small\"> View </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        ))\r\n    \r\n\r\n        return template\r\n    }\r\n\r\n\r\n    console.log(blogs);\r\n\r\n    if(blogs.length < 1 ){\r\n\r\n        return (<div className=\"card material-table\">\r\n            <ToastContainer />\r\n            <h3>Blogs</h3>\r\n            <p className={styles.nodata}> No Data Available </p>\r\n        </div>)\r\n\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n    \r\n                <div className=\"container\">\r\n    \r\n                    <ToastContainer />\r\n    \r\n                    <Maincarousel height={25} data={blogs}/>\r\n    \r\n    \r\n    \r\n                     {/* cards for news */}\r\n                     { blogCard() }\r\n    \r\n    \r\n                      \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// styles\r\nimport styles from './blogs.module.css'\r\n\r\nimport M from 'materialize-css';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\nimport Moment from 'react-moment';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport {\r\n    CommentOutlined, LikeOutlined, EyeOutlined\r\n  } from '@ant-design/icons';\r\n\r\n// import helpers\r\nimport { URL, fetchData, postData } from '../../Helpers/config'\r\nimport appauth from '../../appauth';\r\n\r\n\r\nexport default function BlogSingle(props) {\r\n    let blog_id = (props.match.params.id);\r\n    let blog_rowid = (props.match.params.rowid);\r\n    let user_id = (props.match.params.user_id);\r\n\r\n    // states\r\n    const [blog, setBlog] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [comment, setComment] = useState([])\r\n    const [postview, setPostview] = useState(0)\r\n    const [commentinfo, setCommentinfo] = useState('')\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        M.AutoInit();\r\n\r\n        let url_blog = `${URL}/api/get_blog/${blog_rowid}`\r\n        let url_blog_view = `${URL}/api/blog_views/${blog_id}`\r\n        let url_user = `${URL}/api/get_user/${user_id}`\r\n        let url_blog_comments = `${URL}/api/get_blog_comments/${blog_id}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n        // blog\r\n        fetchData(url_blog, {data}).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\")\r\n                               : (data.msg.code === -1) ? toast.error(data.msg.msg) : setBlog(data.msg.msg)   \r\n        })\r\n\r\n\r\n        // comments\r\n        fetchData(url_blog_comments).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\"): setComment(data.msg.msg);         \r\n        })\r\n\r\n        // post view\r\n        fetchData(url_blog_view).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\"): setPostview(data.msg.msg.length);    \r\n            console.log({data});\r\n                 \r\n        })\r\n\r\n\r\n        // user \r\n        if(user_id !== null){\r\n            fetchData(url_user).then(data=>{\r\n                \r\n                (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setUser(data.msg.msg)\r\n                \r\n            })\r\n        }\r\n            \r\n    },[])\r\n\r\n\r\n    const addComment = (id) => {\r\n        let user_id = 0;\r\n        (appauth.user_id === null) ? user_id = 0 : user_id = appauth.user_id\r\n        let blog_id = blog.id\r\n        let url = ''\r\n\r\n        console.log(comment);\r\n        \r\n\r\n        // add comment\r\n        if (id === -1) {\r\n            url = `${URL}/api/blog_comments`\r\n        }\r\n\r\n        if (url !== ''){\r\n\r\n            if(commentinfo.trim() === ''){\r\n                toast.warning(\"Please add comment\") \r\n            }else{\r\n\r\n                let data ={\r\n                    'blog_id': blog_id, \r\n                    'user_id': user_id, \r\n                    'comment': comment\r\n                }\r\n    \r\n    \r\n                postData(url, data)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    if(data.code === -1) {\r\n                        toast.error(\"Fatal Error while fetching data\") \r\n                    }else {\r\n                        (data.msg.code === -1) ? toast.error(data.msg.msg) : toast.success(data.msg.msg);\r\n                        \r\n                        setTimeout(() => {\r\n                            // window.location.reload()\r\n                        }, 2000);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(err)\r\n                    toast.error(\"Fatal Error\") \r\n                })\r\n            }\r\n        }else{\r\n            toast.warning(\"Could not find location to store comment\")\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n    const loadCommens = () => {\r\n        return ((comment.length < 1) ?\r\n            <div  className=\"card material-table\">\r\n                <p> Be the first to comment on this </p>\r\n            </div>\r\n        :\r\n            <div  className=\"card material-table\">\r\n                {\r\n                    comment.map((item, i) => (\r\n                        <div key={i}>  \r\n                            <div className=\"pull_right break_float\"><b>_</b> <Moment format = 'LLLL'>{item.created_at}</Moment></div>\r\n                            <b> {item.comment} </b>\r\n                            <hr />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>)\r\n    }\r\n\r\n\r\n\r\n    // add a like\r\n    const addLike = () => {\r\n        let url_blog_like = `${URL}/api/blog_likes`\r\n        let data = {\"blog_id\": blog_id}\r\n         // blog like\r\n         postData(url_blog_like, data).then(data=>{\r\n             console.log(data);\r\n             \r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\")\r\n                               : (data.msg.code === -1) ? toast.error(data.msg.msg) : setBlog(data.msg.msg)   \r\n        })\r\n        // toast.info(\"Post liked\") \r\n    }\r\n\r\n    if(blog.length < 1){\r\n        return (\r\n                <div className=\"card material-table\">\r\n                    <ToastContainer />\r\n                        <h5>Fail to load Data</h5>\r\n                </div>\r\n        )\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <ToastContainer />\r\n                <div className={\"container \" + styles.blog_box}>\r\n                    <div className={styles.blog_img} style={{\r\n                        backgroundImage: `url('${URL}/api/uploads/blog_images/${blog.featured_image}')`\r\n                    }}></div>\r\n    \r\n                    <div className=\"row\">\r\n\r\n\r\n                        <h5 className={styles.blog_title}> {blog.title} </h5>\r\n                        <div className=\"s12\">\r\n                            <div className={styles.blog_cat}> \r\n\r\n                                <span> BY: <b> {user.names} </b> </span>   \r\n                                <span> Updated at: <b> {blog.created_at}</b> </span> \r\n\r\n                                <div className={styles.blog_cat_tag}> {blog.cats.title} </div>  \r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            { ReactHtmlParser(blog.body) }\r\n                        </div>\r\n\r\n                        <div className=\"s12\">\r\n\r\n                            <h5> \r\n                                Comments  <CommentOutlined />  \r\n                                <div className=\"pull_right break_float\">  <LikeOutlined onClick={addLike}/> <small>0</small> </div> \r\n                                <div className=\"pull_right break_float\" style={{marginRight: '2rem'}}>  <EyeOutlined /> <small> {postview} </small> </div> \r\n                            </h5>\r\n                            <div className=\"divider\"></div>\r\n                            <div className={styles.comment}>\r\n\r\n                                <textarea className={styles.blog_comment_box} \r\n                                        onChange={(e) => setCommentinfo(e.target.value)}\r\n                                        placeholder=\"Inserrt comment\"\r\n                                ></textarea>\r\n\r\n                                <div>\r\n                                    <button className=\"btn waves-effect waves-light green\" \r\n                                            onClick={() => addComment(-1)}>\r\n                                                Add Comment\r\n                                    </button> \r\n                                </div>\r\n\r\n                                {loadCommens()}  \r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n","import React from 'react'\r\n// dependencies\r\nimport AppAuth from '../../appauth'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default function logout() {\r\n\r\n    \r\n    const processLogout = () => {\r\n        AppAuth.deAuthenticate()\r\n    }\r\n    \r\n    processLogout()\r\n    return (\r\n        <div>\r\n            <Redirect to=\"login\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n// dependencies\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  HomeOutlined,\r\n  TeamOutlined,\r\n  AudioOutlined,\r\n  FormOutlined,\r\n  BookOutlined,\r\n  ToolOutlined\r\n} from '@ant-design/icons';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// helpers\r\nimport { URL, fetchData } from '../../../Helpers/config'\r\nimport appauth from '../../../appauth';\r\n\r\n\r\n// styles\r\n// import styles from './dashboard.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Content,  Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass AppDashboardLayout extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    user:[],\r\n    isUserAdmin: 'N'\r\n  };\r\n\r\n  componentDidMount() {\r\n    let user_id = (appauth.user_id)\r\n    let url_user = `${URL}/api/get_user/${user_id}`\r\n    if(user_id !== null){\r\n        fetchData(url_user).then(data=>{\r\n            if(data.code === -1) {\r\n              toast.error(\"Fatal Error while fetching data\")               \r\n            }else{\r\n              this.setState({\r\n                isUserAdmin: data.msg.msg.admin,\r\n                user: data.msg.msg,\r\n              })\r\n\r\n            }\r\n            \r\n        })\r\n    }else{\r\n      toast.error(\"User Not Found\")\r\n    }\r\n    \r\n  }\r\n\r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user.length < 1 && this.isUserAdmin === undefined){\r\n      return (\r\n        <div className=\"card material-table\">\r\n            <ToastContainer />\r\n            <h5>Loading User ...</h5>\r\n        </div>\r\n      )\r\n    }else{\r\n      return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <ToastContainer />\r\n          <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n            <div className=\"logo\" />\r\n  \r\n  \r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item key=\"1\" icon={<HomeOutlined />}>\r\n              <Link to=\"/dashboard\"> Home</Link> \r\n              </Menu.Item>\r\n  \r\n              <SubMenu key=\"sub10\" icon={<FormOutlined />} title=\"Academic\">\r\n  \r\n                <Menu.Item key=\"120\">\r\n                  <Link to=\"/placeOrder\"> Place Order</Link> \r\n                </Menu.Item>\r\n  \r\n                <Menu.Item key=\"121\">\r\n                  <Link to={{\r\n                     pathname: '/nil_orders',\r\n                     state: {\r\n                        archived: 0,\r\n                        nil: 'Y'\r\n                     }\r\n                   }}> Nil Orders </Link> \r\n                </Menu.Item>\r\n  \r\n                <Menu.Item key=\"122\">\r\n                  <Link to={{\r\n                     pathname: '/orders',\r\n                     state: {\r\n                        archived: 0,\r\n                        nil: 'N'\r\n                     }\r\n                   }}> Not Nil Orders</Link> \r\n                </Menu.Item>\r\n  \r\n                <Menu.Item key=\"123\">\r\n                   <Link to={{\r\n                     pathname: '/archived_orders',\r\n                     state: {\r\n                        archived: 1,\r\n                        nil: 'A'\r\n                     }\r\n                   }}> Archived Orders</Link>\r\n                </Menu.Item>\r\n                \r\n                {\r\n                  (this.isUserAdmin === 'Y') ?\r\n                    <>\r\n                      <Menu.Item key=\"124\">\r\n                      <Link to=\"/orderformat\">  Order Formats</Link>\r\n                      </Menu.Item>\r\n        \r\n                      <Menu.Item key=\"125\">\r\n                        <Link to=\"/ordercat\"> Order Categories</Link>\r\n                      </Menu.Item>\r\n                      \r\n                      <Menu.Item key=\"126\">\r\n                      <Link to=\"/orderlang\">  Order Languages</Link>\r\n                      </Menu.Item>\r\n                    </>\r\n                  :\r\n                  ''\r\n                }\r\n  \r\n              </SubMenu>\r\n  \r\n              {\r\n                  (this.isUserAdmin === 'Y') ?\r\n                  <>\r\n                    <Menu.Item key=\"2\" icon={<TeamOutlined />}>\r\n                      <Link to=\"users\">\r\n                        Users\r\n                      </Link>\r\n                    </Menu.Item>\r\n                    \r\n                    \r\n                    <SubMenu key=\"sub1\" icon={<BookOutlined />} title=\"Blogs\">\r\n        \r\n                      <Menu.Item key=\"3\">\r\n                        <Link to=\"/admin_blogs\">\r\n                          Blogs\r\n                        </Link>\r\n                      </Menu.Item>\r\n                      <Menu.Item key=\"4\">\r\n                        <Link to=\"/admin_blogcat\">\r\n                          Blog Categories\r\n                        </Link>\r\n                      </Menu.Item>\r\n        \r\n                    </SubMenu>\r\n        \r\n        \r\n                    <SubMenu key=\"sub2\" icon={<AudioOutlined />} title=\"Podcasts\">\r\n                      <Menu.Item key=\"6\">Podcasts</Menu.Item>\r\n                      <Menu.Item key=\"8\">Podcasts Categories</Menu.Item>\r\n                    </SubMenu>\r\n        \r\n                    <SubMenu key=\"sub9\" icon={<ToolOutlined />} title=\"Jobs\">\r\n                <Menu.Item key=\"130\">Jobs</Menu.Item>\r\n                <Menu.Item key=\"131\">Jobs Categories</Menu.Item>\r\n              </SubMenu>\r\n                  </>\r\n                  :\r\n                  ''\r\n                }\r\n            </Menu>\r\n  \r\n  \r\n          </Sider>\r\n  \r\n  \r\n          <Layout className=\"site-layout\">\r\n  \r\n  \r\n            <Content style={{ margin: '0 16px' }}>\r\n  \r\n  \r\n              {this.props.children}\r\n  \r\n  \r\n            </Content>\r\n  \r\n          </Layout>\r\n  \r\n  \r\n  \r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default AppDashboardLayout\r\n","import React from 'react'\r\n\r\n\r\n// dependencies\r\nimport { Modal } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n// import helpers\r\nimport { URL, fetchData } from '../../../Helpers/config'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    modal_visible:false,\r\n    // count totals\r\n    nil_orders: 0,\r\n    orders: 0,\r\n    archived_orders: 0,\r\n    order_formats: 0,\r\n    order_categories: 0,\r\n    blogs: 0,\r\n    blog_categories: 0,\r\n\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let fetch_totals = `${URL}/api/fetch_totals` \r\n\r\n        fetchData(fetch_totals).then(data=>{\r\n            \r\n            if(data.code === -1){\r\n              toast.error(\"Fatal Error while fetching data\")\r\n            }else{\r\n              this.setState({ \r\n                nil_orders: data.msg.msg.nil_orders,\r\n                orders: data.msg.msg.orders,\r\n                archived_orders: data.msg.msg.archived_orders,\r\n                order_formats: data.msg.msg.order_formats,\r\n                order_categories: data.msg.msg.order_cats,\r\n                blogs: data.msg.msg.blogs,\r\n                blog_categories: data.msg.msg.blog_cats,\r\n               });\r\n            } \r\n        })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n          {/* <Modal_data active={true} /> */}\r\n\r\n          <Modal\r\n            title=\"Basic Modal\"\r\n            visible={this.state.modal_visible}\r\n            onOk={()=>this.setState({modal_visible:false})}\r\n            onCancel={()=>this.setState({modal_visible:false})}\r\n          >\r\n                <p>Some contents...</p>\r\n          </Modal>\r\n          <ToastContainer />\r\n\r\n\r\n          <div className=\"card\">\r\n              <h3>Dashboard </h3>\r\n              <div className=\"divider\"></div>\r\n              <div className=\"row\">\r\n                <div className=\"s12\">\r\n\r\n                    <div className=\"card material-table academic\">\r\n\r\n                      <h5>Academic   <i className=\"small material-icons\">class</i> </h5>\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col s12 m4\">\r\n                          <div className=\"card blue-grey darken-1\">\r\n                            <span className=\"new badge\"  data-badge-caption=\"Total\"> {this.state.nil_orders} </span>  \r\n                            <div className=\"card-content white-text\" style={{height: \"9rem\"}}>\r\n                              <span className=\"card-title\">Nil Orders \r\n                              </span>\r\n                              <p>Orders Placed by Clients who havent registered to the system</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <Link to={{\r\n                                  pathname: '/nil_orders',\r\n                                  state: {\r\n                                      archived: 0,\r\n                                      nil: 'Y'\r\n                                  }\r\n                                }}> Visit\r\n                              </Link> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* end col */}\r\n\r\n                        <div className=\"col s12 m4\">\r\n                          <div className=\"card blue-grey darken-1\">\r\n                            <span className=\"new badge\"  data-badge-caption=\"Total\"> {this.state.orders}  </span>  \r\n                            <div className=\"card-content white-text\" style={{height: \"9rem\"}}>\r\n                              <span className=\"card-title\"> Users Orders </span>\r\n                              <p>Orders Placed by Clients who have registered to the system</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <Link to={{\r\n                                  pathname: '/orders',\r\n                                  state: {\r\n                                      archived: 0,\r\n                                      nil: 'N'\r\n                                  }\r\n                                }}> Visit\r\n                              </Link> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* end col */}\r\n\r\n                        <div className=\"col s12 m4\">\r\n                          <div className=\"card blue-grey darken-1\">\r\n                            <span className=\"new badge\"  data-badge-caption=\"Total\"> {this.state.archived_orders}  </span>  \r\n                            <div className=\"card-content white-text\" style={{height: \"9rem\"}}>\r\n                              <span className=\"card-title\">Archived Orders </span>\r\n                              <p> Completed Orders and user satisfied</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <Link to={{\r\n                                  pathname: '/archived_orders',\r\n                                  state: {\r\n                                      archived: 1,\r\n                                      nil: 'A'\r\n                                  }\r\n                                }}> Visit\r\n                              </Link> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* end col */}\r\n\r\n                        <div className=\"col s12 m4\">\r\n                          <div className=\"card blue-grey darken-1\">\r\n                            <span className=\"new badge\"  data-badge-caption=\"Total\"> {this.state.order_formats}  </span>  \r\n                            <div className=\"card-content white-text\" style={{height: \"9rem\"}}>\r\n                              <span className=\"card-title\">Formats</span>\r\n                              <p>Formats that a client can request on an Order</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <Link to=\"/orderformat\"> Visit </Link> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* end col */}\r\n\r\n\r\n                        <div className=\"col s12 m4\">\r\n                          <div className=\"card blue-grey darken-1\">\r\n                            <span className=\"new badge\"  data-badge-caption=\"Total\"> {this.state.order_categories}  </span>  \r\n                            <div className=\"card-content white-text\" style={{height: \"9rem\"}}>\r\n                              <span className=\"card-title\">Categories </span>\r\n                              <p>Categories that a client can request on an Order</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <Link to=\"/ordercat\"> Visit\r\n                              </Link> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* end col */}\r\n\r\n                      </div>\r\n                      {/* end row */}\r\n\r\n\r\n                    </div>\r\n                    {/* end academic */}\r\n\r\n                    <div className=\"card material-table blogs\">\r\n\r\n                      <h5>Blogs   <i className=\"small material-icons\">format_quote</i> </h5>\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col s12 m4\">\r\n                          <div className=\"card blue-grey darken-1\">\r\n                            <span className=\"new badge\"  data-badge-caption=\"Total\"> {this.state.blogs}  </span>  \r\n                            <div className=\"card-content white-text\" style={{height: \"9rem\"}}>\r\n                              <span className=\"card-title\">Blogs</span>\r\n                              <p>Blogs Posted</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <Link to=\"/admin_blogs\"> Visit\r\n                              </Link> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* end col */}\r\n\r\n                        <div className=\"col s12 m4\">\r\n                          <div className=\"card blue-grey darken-1\">\r\n                            <span className=\"new badge\"  data-badge-caption=\"Total\"> {this.state.blog_categories}  </span>  \r\n                            <div className=\"card-content white-text\" style={{height: \"9rem\"}}>\r\n                              <span className=\"card-title\"> Categories </span>\r\n                              <p>Blog Categories that have been Created</p>\r\n                            </div>\r\n                            <div className=\"card-action\">\r\n                              <Link to=\"/admin_blogcat\"> Visit\r\n                              </Link> \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* end col */}\r\n\r\n                      </div>\r\n                      {/* end row */}\r\n\r\n                      </div>\r\n                      {/* end blogs */}\r\n\r\n                </div>\r\n              </div>\r\n              {/* end row */}\r\n          </div>\r\n\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// import helpers\r\nimport { URL, fetchData } from '../../../../Helpers/config'\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NilOrders() {\r\n\r\n    \r\n    const [nilorders, setNilorders] = useState([])\r\n\r\n\r\n    // call seerver data\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n        let url_orders = `${URL}/api/nil_order?nil=Y&archived=0`\r\n\r\n        fetchData(url_orders).then(data=>{\r\n            \r\n            (data.code === -1) ? alert(\"Fatal Error while fetching data\") : setNilorders(data.msg)\r\n            console.log(data)\r\n        })\r\n        \r\n\r\n    },[])\r\n\r\n\r\n    // render nilOrders\r\n    const nilorder_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"title\",\r\n            label: \"Title\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        }, \r\n        {\r\n            name: \"notes\",\r\n            label: \"Notes\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },        \r\n        {\r\n        name: 'Action',\r\n        options: {\r\n            filter: false,\r\n            sort: false,\r\n            empty: true,\r\n            customBodyRender: (dataIndex, rowData) => {\r\n                console.log(rowData.rowData[0])\r\n                return (\r\n                    <Link style={{marginLeft: '10px'}}\r\n                        to={`/view_order/${rowData.rowData[0]}`} \r\n                        className=\"btn waves-effect waves-light green\">\r\n                                view\r\n                    </Link> \r\n                );\r\n            }\r\n            },\r\n        }\r\n      ];\r\n    const nilorder_options = {\r\n        textLabels: {\r\n            body: {\r\n              noMatch: \"Sorry, no matching records found\",\r\n              toolTip: \"Sort\",\r\n              columnHeaderTooltip: column => `Sort for ${column.label}`\r\n            },\r\n            pagination: {\r\n              next: \"Next Page\",\r\n              previous: \"Previous Page\",\r\n              rowsPerPage: \"Rows per page:\",\r\n              displayRows: \"of\",\r\n            },\r\n            toolbar: {\r\n              search: \"Search\",\r\n              downloadCsv: \"Download CSV\",\r\n              print: \"Print\",\r\n              viewColumns: \"View Columns\",\r\n              filterTable: \"Filter Table\",\r\n            },\r\n            filter: {\r\n              all: \"All\",\r\n              title: \"FILTERS\",\r\n              reset: \"RESET\",\r\n            },\r\n            viewColumns: {\r\n              title: \"Show Columns\",\r\n              titleAria: \"Show/Hide Table Columns\",\r\n            }\r\n          },\r\n          selectableRows: false\r\n      };\r\n    const nilorders_data = nilorders\r\n\r\n\r\n    if(nilorders.length < 1){\r\n        return <div className=\"card material-table\">\r\n                    <h4> Nil Orders </h4>\r\n                    <p> No data available</p>\r\n                </div>\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Xcontainer\">\r\n                 \r\n    \r\n    \r\n                    <h3 className={styles.h3m20}> Nil Orders</h3>\r\n    \r\n                    <div id=\"admin\" className=\"col s12\">\r\n                        <div className=\"card material-table\">\r\n                            \r\n                   \r\n    \r\n                            <MUIDataTable\r\n                                title={\"Nil Orders Table\"}\r\n                                data={nilorders_data}\r\n                                columns={nilorder_columns}\r\n                                options={nilorder_options}\r\n                            />\r\n                        \r\n                        </div>\r\n                    </div>\r\n    \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// import helpers\r\nimport { URL, fetchData } from '../../../../Helpers/config'\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NilOrders() {\r\n\r\n    \r\n    const [nilorders, setNilorders] = useState([])\r\n\r\n\r\n    // call seerver data\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n        let url_orders = `${URL}/api/nil_order?nil=A&archived=1`\r\n\r\n        fetchData(url_orders).then(data=>{\r\n            \r\n            (data.code === -1) ? alert(\"Fatal Error while fetching data\") : setNilorders(data.msg)\r\n            console.log(data)\r\n        })\r\n        \r\n\r\n    },[])\r\n\r\n\r\n    // render nilOrders\r\n    const nilorder_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"title\",\r\n            label: \"Title\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        }, \r\n        {\r\n            name: \"notes\",\r\n            label: \"Notes\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },        \r\n        {\r\n        name: 'Action',\r\n        options: {\r\n            filter: false,\r\n            sort: false,\r\n            empty: true,\r\n            customBodyRender: (dataIndex, rowData) => {\r\n                console.log(rowData.rowData[0])\r\n                return (\r\n                    <Link style={{marginLeft: '10px'}}\r\n                        to={`/view_order/${rowData.rowData[0]}`} \r\n                        className=\"btn waves-effect waves-light green\">\r\n                                view\r\n                    </Link> \r\n                );\r\n            }\r\n            },\r\n        }\r\n      ];\r\n    const nilorder_options = {\r\n        textLabels: {\r\n            body: {\r\n              noMatch: \"Sorry, no matching records found\",\r\n              toolTip: \"Sort\",\r\n              columnHeaderTooltip: column => `Sort for ${column.label}`\r\n            },\r\n            pagination: {\r\n              next: \"Next Page\",\r\n              previous: \"Previous Page\",\r\n              rowsPerPage: \"Rows per page:\",\r\n              displayRows: \"of\",\r\n            },\r\n            toolbar: {\r\n              search: \"Search\",\r\n              downloadCsv: \"Download CSV\",\r\n              print: \"Print\",\r\n              viewColumns: \"View Columns\",\r\n              filterTable: \"Filter Table\",\r\n            },\r\n            filter: {\r\n              all: \"All\",\r\n              title: \"FILTERS\",\r\n              reset: \"RESET\",\r\n            },\r\n            viewColumns: {\r\n              title: \"Show Columns\",\r\n              titleAria: \"Show/Hide Table Columns\",\r\n            }\r\n          },\r\n          selectableRows: false\r\n      };\r\n    const nilorders_data = nilorders\r\n\r\n\r\n    if(nilorders.length < 1){\r\n        return <div className=\"card material-table\">\r\n                    <h4> Archived Orders </h4>\r\n                    <p> No data available</p>\r\n                </div>\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Xcontainer\">\r\n                 \r\n    \r\n    \r\n                    <h3 className={styles.h3m20}> Archived Orders</h3>\r\n    \r\n                    <div id=\"admin\" className=\"col s12\">\r\n                        <div className=\"card material-table\">\r\n                            \r\n                   \r\n    \r\n                            <MUIDataTable\r\n                                title={\"Archived Orders Table\"}\r\n                                data={nilorders_data}\r\n                                columns={nilorder_columns}\r\n                                options={nilorder_options}\r\n                            />\r\n                        \r\n                        </div>\r\n                    </div>\r\n    \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// import helpers\r\nimport { URL, fetchData } from '../../../../Helpers/config'\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Orders(props) {\r\n\r\n    \r\n    const [nilorders, setNilorders] = useState([])\r\n    const [archived, setArchived] = useState([])\r\n    const [nil, setNil] = useState([])\r\n\r\n\r\n    // call seerver data\r\n    useEffect(() => {\r\n\r\n        const {archived, nil} = props.location.state\r\n        setArchived(props.location.state.archived)\r\n        setNil(props.location.state.nil)\r\n        console.log(props.location.state);\r\n        console.log('archived');\r\n        \r\n\r\n        M.AutoInit();\r\n\r\n        let url_orders = `${URL}/api/nil_order?nil=${nil}&archived=${archived}`\r\n\r\n        fetchData(url_orders).then(data=>{\r\n            \r\n            (data.code === -1) ? alert(\"Fatal Error while fetching data\") : setNilorders(data.msg)\r\n            console.log(data)\r\n        })\r\n        \r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n    // render nilOrders\r\n    const nilorder_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"title\",\r\n            label: \"Title\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        }, \r\n        {\r\n            name: \"notes\",\r\n            label: \"Notes\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },        \r\n        {\r\n        name: 'Action',\r\n        options: {\r\n            filter: false,\r\n            sort: false,\r\n            empty: true,\r\n            customBodyRender: (dataIndex, rowData) => {\r\n                return (\r\n                    <Link style={{marginLeft: '10px'}}\r\n                        to={`/view_order/${rowData.rowData[0]}`} \r\n                        className=\"btn waves-effect waves-light green\">\r\n                                view\r\n                    </Link> \r\n                );\r\n            }\r\n            },\r\n        }\r\n      ];\r\n\r\n\r\n    const nilorder_options = {\r\n        textLabels: {\r\n            body: {\r\n              noMatch: \"Sorry, no matching records found\",\r\n              toolTip: \"Sort\",\r\n              columnHeaderTooltip: column => `Sort for ${column.label}`\r\n            },\r\n            pagination: {\r\n              next: \"Next Page\",\r\n              previous: \"Previous Page\",\r\n              rowsPerPage: \"Rows per page:\",\r\n              displayRows: \"of\",\r\n            },\r\n            toolbar: {\r\n              search: \"Search\",\r\n              downloadCsv: \"Download CSV\",\r\n              print: \"Print\",\r\n              viewColumns: \"View Columns\",\r\n              filterTable: \"Filter Table\",\r\n            },\r\n            filter: {\r\n              all: \"All\",\r\n              title: \"FILTERS\",\r\n              reset: \"RESET\",\r\n            },\r\n            viewColumns: {\r\n              title: \"Show Columns\",\r\n              titleAria: \"Show/Hide Table Columns\",\r\n            }\r\n          },\r\n          selectableRows: false\r\n      };\r\n\r\n\r\n    const nilorders_data = nilorders\r\n\r\n\r\n    if(nilorders.length < 1){\r\n        return <div className=\"card material-table\">\r\n                    <h4>  Orders </h4>\r\n                    <p> No data available</p>\r\n                </div>\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Xcontainer\">\r\n                 \r\n    \r\n    \r\n                    <h3 className={styles.h3m20}> Orders</h3>\r\n    \r\n                    <div id=\"admin\" className=\"col s12\">\r\n                        <div className=\"card material-table\">\r\n                            \r\n                   \r\n    \r\n                            <MUIDataTable\r\n                                title={\" Orders Table\"}\r\n                                data={nilorders_data}\r\n                                columns={nilorder_columns}\r\n                                options={nilorder_options}\r\n                            />\r\n                        \r\n                        </div>\r\n                    </div>\r\n    \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n// dependencies\r\nimport Moment from 'react-moment';\r\nimport M from 'materialize-css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL, fetchData, postData } from '../../../../Helpers/config'\r\n\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default function OrderView(props) {\r\n\r\n    const id = props.match.params.id\r\n\r\n\r\n    // states\r\n    const [nilorder, setNilorder] = useState([])\r\n    const [nilorderdocs, setNilorderdocs] = useState([])\r\n\r\n\r\n\r\n\r\n    // onload fetch docs and order data\r\n    useEffect(()=>{\r\n\r\n        M.AutoInit();\r\n\r\n        let url_orders = `${URL}/api/get_nil_order/${id}`\r\n        let url_orders_docs = `${URL}/api/order_docs/${id}`\r\n\r\n\r\n        fetchData(url_orders).then(data=>{\r\n            (data.code === -1) ? alert(\"Fatal Error while fetching data\") : setNilorder(data.msg)\r\n        })\r\n\r\n        fetchData(url_orders_docs).then(data=>{\r\n            (data.code === -1) ? alert(\"Fatal Error while fetching data\") : setNilorderdocs(data.msg)\r\n        })\r\n    },[])\r\n\r\n\r\n\r\n    // mark order as complete\r\n    const orderComplete = (check=0) => {\r\n\r\n        if(nilorder.archived === 1 && check === 1){\r\n            toast.info(\" Order Already Marked as Complete\")\r\n        }else{\r\n\r\n            let url = `${URL}/api/order_complete/${id}`\r\n            let data = {}\r\n\r\n            if(check === 1){\r\n                data = {\r\n                    archived: 1,\r\n                    nil: 'A'\r\n                }\r\n\r\n            }else{\r\n                let nil = (nilorder.user_id === 0) ? 'Y' : 'N';\r\n                data = {\r\n                    archived: 0,\r\n                    nil\r\n                }\r\n            }\r\n            postData(url, data)\r\n                .then(data => {\r\n                    \r\n                    if(data.code === -1) {\r\n                        toast.error(\"Fatal Error while fetching data\") \r\n                    }else {\r\n                        toast.success(\"Order Marked  as Complete\")\r\n                        setTimeout(() => {\r\n                            window.location.reload()\r\n                        }, 200);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    toast.error(\"Unable to Mark Order as Complete\")\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    \r\n     // render nilOrdersDocs\r\n     const renderNilordersDocs = () => {\r\n        let template = null\r\n\r\n        if(nilorderdocs.length === 0){\r\n            template = <tr>\r\n                            <td colspan={5} className=\"center\"> No Document available </td>\r\n                       </tr>\r\n        }else{\r\n\r\n            template = nilorderdocs.map((item, i) => (\r\n    \r\n                    <tr key={i}>\r\n                        <td>{item.name}</td>\r\n                        <td> {item.extension} </td>\r\n                        <td> {(item.status === 1) ? <b>Active</b> : <b>Inactive</b>} </td>\r\n                        <td> \r\n                            <Moment fromNow>\r\n                                {item.created_at} \r\n                            </Moment>\r\n                        </td>\r\n                        <td> \r\n                            <a href={`${URL}/api/download_doc/${item.id}`} \r\n                                target=\"blank\"\r\n                                className=\"btn waves-effect waves-light green\">\r\n                                Download\r\n                            </a>\r\n                            \r\n                        </td>\r\n                    </tr>\r\n            ))\r\n        }\r\n        \r\n\r\n        return template\r\n    }\r\n\r\n\r\n    // render page\r\n    if (nilorder.formats === undefined) {\r\n        return <h3>rendering</h3>\r\n    }else{\r\n        \r\n        return (\r\n            <div>\r\n\r\n                <div className={styles.orderViewHeader}>\r\n                    <ToastContainer />\r\n\r\n                    <h4> Order <b>{nilorder.order_number}</b> Details </h4>\r\n                    {/* <div className=\"divider\"></div>  */}\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className = {styles.orderViewDetails}>\r\n\r\n                    <h5>Status: New</h5>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"card material-table\">\r\n\r\n                        <p> <b>Title: </b> {nilorder.title} </p>\r\n                        <p> <b>Category: </b> {nilorder.cats.name} </p>\r\n                        <p> <b>Format: </b> {nilorder.formats.name} </p>\r\n                        <p> <b>Language: </b> {nilorder.lang.name} </p>\r\n                        <p> <b>Pages: </b> {nilorder.pages} </p>\r\n                        <p> <b>Word count: </b> {nilorder.word_count} </p>\r\n                        <p> <b>Notes: </b> {nilorder.notes} </p>\r\n                        <p> <b>Created At: </b> <Moment>{nilorder.updated_at}</Moment> </p>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className = {styles.orderViewDocs}>\r\n\r\n                    <h5>Documents</h5>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"card material-table\">\r\n\r\n                        <table className=\"highlight\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Extension</th>\r\n                                <th>status</th>\r\n                                <th>Created At</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                            </thead> \r\n\r\n                            <tbody>\r\n                            \r\n\r\n                                {renderNilordersDocs()}\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className = {styles.orderViewDocs}>\r\n                    <h5>Actions</h5>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"card material-table\">\r\n\r\n                        <button className=\"btn waves-effect waves-light green\"\r\n                                onClick ={ () => orderComplete(1)}>\r\n                                Mark As Complete\r\n                        </button>\r\n\r\n                        <button className=\"btn waves-effect waves-light lightgreen\"\r\n                                onClick ={ () => orderComplete(-1)}>\r\n                                Mark As inComplete\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n// dependencies\r\nimport { Modal } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport M from 'materialize-css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL, fetchData, postData } from '../../../../Helpers/config'\r\nimport appauth from '../../../../appauth';\r\n\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default function OrderFormat() {\r\n\r\n    \r\n    const [orderformats, setOrderFormats] = useState([])\r\n    \r\n    const [mvisible, setMvisible] = useState(false)\r\n    const [modAction, setModAction] = useState(\"\")\r\n    const [modHeader, setModHmodHeader] = useState(\"Nyenjeri Orders\")\r\n\r\n\r\n    // set inputs\r\n    const [formattitle, setFormattitle] = useState('')\r\n    const [formatnotes, setFormatnotes] = useState('')\r\n    const [formatURL, setFormatURL] = useState('')\r\n    const [rowid, setRowid] = useState('')\r\n\r\n\r\n\r\n    // call seerver data\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n        let url_order_formats = `${URL}/api/order_format?_token=${appauth.apptoken}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_order_formats, {data}).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setOrderFormats(data.msg)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    // submit data\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n\r\n    const onSubmit = data => {\r\n        let url =''\r\n        if(data.url === 'C') {\r\n            url = `${URL}/api/order_format`\r\n        }else{\r\n            url = `${URL + data.url}` \r\n        }  \r\n            \r\n        postData(url, data)\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.code === -1) {\r\n                        toast.error(\"Fatal Error while fetching data\") \r\n                }else {\r\n                    toast.success(\"Data posted \")\r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 200);\r\n                }\r\n                setMvisible(false)\r\n            })\r\n            .catch(err => console.error(err))\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    const delRecord = (id) => {\r\n        let url = `${URL}/api/del_order_format/${rowid}`\r\n\r\n        console.log(id)\r\n\r\n        let confirmation = window.confirm(\"Are you sure you want to delete the record\")\r\n\r\n        console.log( url);\r\n        if (confirmation) {\r\n            \r\n            fetchData(url)\r\n                .then(data => {\r\n                    if(data.code === -1) {\r\n                        toast.error(data.msg.msg) \r\n                    }else {\r\n                        toast.success(data.msg.msg)\r\n                        setTimeout(() => {\r\n                            window.location.reload()\r\n                        }, 3000);\r\n                    }\r\n                    setMvisible(false)\r\n                })\r\n                .catch(err => console.error(err))\r\n        }else{\r\n            setMvisible(false)\r\n        }\r\n\r\n    } \r\n\r\n    \r\n\r\n\r\n    // edit order\r\n    const editOrderFormat = (id) => {\r\n        // call server for data\r\n        if (id === -1) {\r\n\r\n            setFormattitle('')\r\n            setFormatnotes('')\r\n            setFormatURL(`C`)\r\n            setModHmodHeader(\"Add Order Category\")\r\n\r\n        }else{\r\n            \r\n\r\n            fetchData(`${URL}/api/get_order_format/${id}`)\r\n            .then(data => {\r\n                if(data.code === -1) {\r\n                    toast.error(\"Unable to fetch data\")\r\n                }else{\r\n                    let dat = data.msg\r\n                    console.log(dat);\r\n                    \r\n                    setFormattitle(dat.name)\r\n                    setFormatnotes(dat.description)\r\n                    setRowid(dat.id)\r\n\r\n                }\r\n                setFormatURL(`/api/update_order_format/${id}`)\r\n            })\r\n            .catch(\r\n                error => console.error(error)\r\n            )\r\n    \r\n            setModHmodHeader(\"Edit Order Format\")\r\n\r\n        }\r\n        setModAction('edit_order')\r\n        setMvisible(true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // render modal\r\n    const renderMdata = (action = \"\") => {\r\n        let template = null\r\n\r\n        if (action === 'edit_order') {\r\n            template = (\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\" onSubmit={handleSubmit(onSubmit)}>\r\n                            <div className=\"row\">\r\n\r\n                                <input name=\"url\" defaultValue={formatURL} ref={register()} type=\"hidden\"/>\r\n                                <input type=\"hidden\" defaultValue={appauth.user_id} name=\"user_id\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue='1' name=\"status\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue={appauth.apptoken} name=\"_token\" ref={register()}/>\r\n\r\n                                <div className=\"default-field col s12\">\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <input id=\"title\" \r\n                                            defaultValue={formattitle} \r\n                                            name=\"name\" type=\"text\" \r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setFormattitle(e.target.value)} />\r\n                                    {errors.name && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                <div className=\"default-field col s12\">\r\n                                    <label htmlFor=\"description\"> Description </label>  \r\n                                    <textarea id=\"description\" \r\n                                            className=\"materialize-textarea\" \r\n                                            defaultValue={formatnotes} \r\n                                            name=\"description\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setFormatnotes(e.target.value)}>\r\n                                    </textarea>\r\n                                    {errors.description && <span className=\"red_message\">This field is required</span>}\r\n                                </div> \r\n\r\n                                {\r\n                                    (formatURL !== 'C') ?\r\n                                        <div className=\"col s12\">\r\n                                            <label htmlFor=\"archive\">Archive</label>\r\n                                            <select id=\"archive\" className=\"browser-default\" name=\"archive\" ref={register()}>\r\n                                                <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                                <option value=\"0\">No</option>\r\n                                                <option value=\"1\">Yes</option>\r\n                                                \r\n                                            </select>\r\n                                            {errors.archive && <span className=\"red_message\">This field is required</span>}\r\n                                        </div>\r\n                                    : ''\r\n\r\n                                }\r\n\r\n                                <div className=\"col s12\" style={{marginTop: '2rem'}}>\r\n                                    <input style={{marginRight: \"30px\"}} id=\"submit_format\" \r\n                                            className=\"waves-effect waves-light btn\" \r\n                                            name=\"update\"  \r\n                                            type=\"submit\"/>  \r\n                                   \r\n                                </div>\r\n\r\n                            </div>\r\n                        </form>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"right-align row_del\">\r\n                                    {\r\n                                        (formatURL !== 'C') ?                                            \r\n\r\n                                            <button onClick ={(rowid) => delRecord(rowid)} className=\"waves-effect waves-light btn red \">Delete </button>  \r\n                                        : ''\r\n                                    }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            template= (<div>Processing ...</div>)\r\n        }\r\n        return template\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // render orderformats\r\n    const renderorderFormats = () => {\r\n        let template = null\r\n\r\n        template = orderformats.map((item, i) => (\r\n\r\n                <tr key={i}>\r\n                    <td>{item.name}</td>\r\n                    <td> {item.status} </td>\r\n                    <td> {item.description} </td>\r\n                    <td> \r\n                        <Moment fromNow>\r\n                            {item.updated_at} \r\n                        </Moment>\r\n                    </td>\r\n                    <td> <button className=\"btn waves-effect waves-light green\" onClick={() => editOrderFormat(item.id)}>Edit</button> </td>\r\n                </tr>\r\n        ))\r\n\r\n        return template\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if(orderformats.length < 1){\r\n        return <div className=\"card material-table\">\r\n                    <h4>  Order Formats </h4>\r\n                    <p> No data available</p>\r\n                </div>\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <ToastContainer />\r\n                    <Modal\r\n                            title={modHeader}\r\n                            visible={mvisible}\r\n                            onOk={()=>setMvisible(false)}\r\n                            onCancel={()=>setMvisible(false)}\r\n                        >\r\n    \r\n                            <div>\r\n    \r\n                                { renderMdata(modAction) }\r\n    \r\n                            </div>\r\n    \r\n    \r\n                    </Modal>\r\n    \r\n    \r\n                    <h3 className={styles.h3m20}>Orders Format</h3>\r\n    \r\n    \r\n                    <button className=\"btn waves-effect waves-light green\" onClick={() => editOrderFormat(-1)}>Add</button>\r\n                    <table className=\"highlight\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Active</th>\r\n                            <th>Description</th>\r\n                            <th>Created At</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead> \r\n    \r\n                        <tbody>\r\n                        \r\n    \r\n                            {renderorderFormats()}\r\n    \r\n    \r\n                        </tbody>\r\n                    </table>\r\n                \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\n// dependencies\r\nimport { Modal } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport M from 'materialize-css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL, fetchData, postData } from '../../../../Helpers/config'\r\nimport appauth from '../../../../appauth';\r\n\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default function OrderCat() {\r\n\r\n    \r\n    const [ordercats, setOrdercats] = useState([])\r\n    \r\n    const [mvisible, setMvisible] = useState(false)\r\n    const [modAction, setModAction] = useState(\"\")\r\n    const [modHeader, setModHmodHeader] = useState(\"Nyenjeri Orders\")\r\n\r\n\r\n    // set inputs\r\n    const [cattitle, setCattitle] = useState('')\r\n    const [catnotes, setCatnotes] = useState('')\r\n    const [catURL, setCattURL] = useState('')\r\n    const [rowid, setRowid] = useState('')\r\n\r\n\r\n    \r\n    // call seerver data\r\n    useEffect(() => {\r\n      \r\n\r\n        M.AutoInit();\r\n\r\n        let url_order_cats = `${URL}/api/order_cat?_token=${appauth.apptoken}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_order_cats, {data}).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setOrdercats(data.msg)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    // submit data\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    \r\n\r\n\r\n    const onSubmit = data => {\r\n        let url =''\r\n        if(data.url === 'C') {\r\n            url = `${URL}/api/order_cat`\r\n        }else{\r\n            url = `${URL + data.url}` \r\n        }  \r\n        \r\n            \r\n        postData(url, data)\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.code === -1) {\r\n                    toast.error(\"Fatal Error while fetching data\") \r\n                }else {\r\n                    toast.success(\"Data posted Successfully\")\r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 200);\r\n                }\r\n                setMvisible(false)\r\n            })\r\n            .catch(err => console.error(err))\r\n        \r\n    }\r\n\r\n\r\n\r\n    const delRecord = (id) => {\r\n        let url = `${URL}/api/del_order_cat/${rowid}`\r\n\r\n        console.log(id)\r\n\r\n        let confirmation = window.confirm(\"Are you sure you want to delete the record\")\r\n\r\n        console.log( url);\r\n        if (confirmation) {\r\n            \r\n            fetchData(url)\r\n                .then(data => {\r\n                    if(data.code === -1) {\r\n                        toast.error(data.msg.msg) \r\n                    }else {\r\n                        toast.success(data.msg.msg)\r\n                        setTimeout(() => {\r\n                            window.location.reload()\r\n                        }, 3000);\r\n                    }\r\n                    setMvisible(false)\r\n                })\r\n                .catch(err => console.error(err))\r\n        }else{\r\n            setMvisible(false)\r\n        }\r\n\r\n    } \r\n\r\n\r\n\r\n\r\n    // edit order\r\n    const editOrderCat = (id) => {\r\n        // call server for data\r\n        if (id === -1) {\r\n\r\n            setCattitle('')\r\n            setCatnotes('')\r\n            setCattURL(`C`)\r\n            setModHmodHeader(\"Add Order Category\")\r\n\r\n        }else{\r\n\r\n            \r\n            fetchData(`${URL}/api/get_order_cat/${id}`)\r\n            .then(data => {\r\n                if(data.code === -1) {\r\n                    toast.error(\"Unable to fetch data\")\r\n                }else{\r\n                    let dat = data.msg\r\n                    console.log(dat);\r\n                    \r\n                    setCattitle(dat.name)\r\n                    setCatnotes(dat.description)\r\n                    setRowid(dat.id)\r\n\r\n                }\r\n                setCattURL(`/api/update_order_cat/${id}`)\r\n            })\r\n            .catch(\r\n                error => console.error(error)\r\n            )\r\n    \r\n            setModHmodHeader(\"Edit Order Category\")\r\n\r\n        }\r\n        setModAction('edit_order')\r\n        setMvisible(true)\r\n    }\r\n\r\n\r\n\r\n\r\n    // render modal\r\n    const renderMdata = (action = \"\") => {\r\n        let template = null\r\n\r\n        if (action === 'edit_order') {\r\n            template = (\r\n                <div>\r\n                    <div className=\"row\">\r\n\r\n                        <form className=\"col s12\" onSubmit={handleSubmit(onSubmit)}>\r\n                            <div className=\"row\">\r\n\r\n                                <input name=\"url\" defaultValue={catURL} ref={register()} type=\"hidden\"/>\r\n                                <input type=\"hidden\" defaultValue={appauth.user_id} name=\"user_id\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue='1' name=\"status\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue={appauth.apptoken} name=\"_token\" ref={register()}/>\r\n\r\n\r\n                                <div className=\"default-field col s12\">\r\n\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <input id=\"title\" \r\n                                            defaultValue={cattitle} \r\n                                            name=\"name\" type=\"text\" \r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setCattitle(e.target.value)} />\r\n                                    {errors.name && <span className=\"red_message\">This field is required</span>}\r\n\r\n                                </div>\r\n\r\n                                <div className=\"default-field col s12\">\r\n\r\n                                    <label htmlFor=\"description\"> Description </label>  \r\n                                    <textarea id=\"description\" \r\n                                            className=\"materialize-textarea\" \r\n                                            defaultValue={catnotes} \r\n                                            name=\"description\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setCatnotes(e.target.value)} \r\n                                            ></textarea>\r\n                                    {errors.description && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                {\r\n                                    (catURL !== 'C') ?\r\n                                        <div className=\"col s12\">\r\n                                            <label htmlFor=\"archive\">Archive</label>\r\n                                            <select id=\"archive\" className=\"browser-default\" name=\"archive\" ref={register()}>\r\n                                                <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                                <option value=\"0\">No</option>\r\n                                                <option value=\"1\">Yes</option>\r\n                                                \r\n                                            </select>\r\n                                            {errors.archive && <span className=\"red_message\">This field is required</span>}\r\n                                        </div>\r\n                                    : ''\r\n\r\n                                }\r\n\r\n                                <div className=\"col s12\" style={{marginTop: '2rem'}}>\r\n                                    <input style={{marginRight: \"30px\"}} id=\"submit_format\" \r\n                                            className=\"waves-effect waves-light btn\" \r\n                                            name=\"update\"  \r\n                                            type=\"submit\"\r\n                                    />                                     \r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </form>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"right-align row_del\">\r\n                                    {\r\n                                        (catURL !== 'C') ?                                            \r\n\r\n                                            <button onClick ={(rowid) => delRecord(rowid)} className=\"waves-effect waves-light btn red \">Delete </button>  \r\n                                        : ''\r\n                                    }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            template= (<div>Processing ...</div>)\r\n        }\r\n        return template\r\n    }\r\n\r\n\r\n\r\n\r\n    // render ordercats\r\n    const renderordercat = () => {\r\n        let template = null\r\n\r\n        template = ordercats.map((item, i) => (\r\n\r\n                <tr key={i}>\r\n                    <td>{item.name}</td>\r\n                    <td> {item.status} </td>\r\n                    <td> {item.description} </td>\r\n                    <td> \r\n                        <Moment fromNow>\r\n                            {item.created_at} \r\n                        </Moment>\r\n                    </td>\r\n                    <td> <button className=\"btn waves-effect waves-light green\" onClick={() => editOrderCat(item.id)}>Edit</button> </td>\r\n                </tr>\r\n        ))\r\n\r\n        return template\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if(ordercats.length < 1){\r\n        return <div className=\"card material-table\">\r\n                    <h4>  Order Categories </h4>\r\n                    <p> No data available</p>\r\n                </div>\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <ToastContainer />\r\n                    <Modal\r\n                            title={modHeader}\r\n                            visible={mvisible}\r\n                            onOk={()=>setMvisible(false)}\r\n                            onCancel={()=>setMvisible(false)}\r\n                        >\r\n    \r\n                            <div>\r\n    \r\n                                { renderMdata(modAction) }\r\n    \r\n                            </div>\r\n    \r\n    \r\n                    </Modal>\r\n    \r\n    \r\n                    <h3 className={styles.h3m20}>Orders Categories</h3>\r\n    \r\n    \r\n                    <button className=\"btn waves-effect waves-light green\" onClick={() => editOrderCat(-1)}>Add</button>\r\n                    <table className=\"highlight\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Active</th>\r\n                            <th>Description</th>\r\n                            <th>Created At</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead> \r\n    \r\n                        <tbody>\r\n                        \r\n    \r\n                            {renderordercat()}\r\n    \r\n    \r\n                        </tbody>\r\n                    </table>\r\n                \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n// dependencies\r\nimport { Modal } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport M from 'materialize-css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\n// import helpers\r\n// import helpers\r\nimport { URL, fetchData, postData } from '../../../../Helpers/config'\r\nimport appauth from '../../../../appauth';\r\n\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default function OrderLang() {\r\n\r\n    \r\n    const [orderlangs, setOrderlangs] = useState([])\r\n    \r\n    const [mvisible, setMvisible] = useState(false)\r\n    const [modAction, setModAction] = useState(\"\")\r\n    const [modHeader, setModHmodHeader] = useState(\"Nyenjeri Orders\")\r\n\r\n\r\n    // set inputs\r\n    const [langtitle, setLangtitle] = useState('')\r\n    const [langnotes, setLangnotes] = useState('')\r\n    const [langURL, setLangURL] = useState('')\r\n    const [rowid, setRowid] = useState('')\r\n\r\n\r\n\r\n\r\n    \r\n    // call seerver data\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n        let url_order_langs = `${URL}/api/order_lang?_token=${appauth.apptoken}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_order_langs, {data}).then(data=>{\r\n            (data.code === -1) ? alert(\"Fatal Error while fetching data\") : setOrderlangs(data.msg)\r\n        })\r\n\r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n\r\n    // submit data\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n\r\n    const onSubmit = data => {\r\n\r\n        let url =''\r\n        if(data.url === 'C') {\r\n            url = `${URL}/api/order_lang`\r\n        }else{\r\n            url = `${URL + data.url}` \r\n        } \r\n\r\n\r\n        postData(url, data)\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.code === -1) {\r\n                    toast.error(\"Fatal Error while fetching data\") \r\n                }else {\r\n                    toast.success(\"Data posted \")\r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 3000);\r\n                }\r\n                setMvisible(false)\r\n            })\r\n            .catch(err => console.error(err))\r\n\r\n    }\r\n\r\n    const delRecord = (id) => {\r\n        let url = `${URL}/api/del_order_lang/${rowid}`\r\n\r\n        let confirmation = window.confirm(\"Are you sure you want to delete the record\")\r\n\r\n        if (confirmation) {\r\n            \r\n            fetchData(url)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    if(data.code === -1) {\r\n                        toast.error(\"Fatal Error while Deleting data\") \r\n                    }else {\r\n                        toast.success(\"Data Deleted \")\r\n                        setTimeout(() => {\r\n                            window.location.reload()\r\n                        }, 3000);\r\n                    }\r\n                    setMvisible(false)\r\n                })\r\n                .catch(err => console.error(err))\r\n        }else{\r\n            setMvisible(false)\r\n        }\r\n\r\n    } \r\n\r\n    // edit order\r\n    const editOrderLang = (id) => {\r\n        // call server for data\r\n        if (id === -1) {\r\n\r\n            setLangtitle('')\r\n            setLangnotes('')\r\n            setLangURL(`C`)\r\n            setModHmodHeader(\"Add Order Category\")\r\n            \r\n        }else{\r\n\r\n            fetchData(`${URL}/api/get_order_lang/${id}`)\r\n            .then(data => {\r\n                if(data.code === -1) {\r\n                    toast.error(\"Unable to fetch data\")\r\n                }else{\r\n                    let dat = data.msg\r\n                    \r\n                    setLangtitle(dat.name)\r\n                    setLangnotes(dat.description)\r\n                    setRowid(dat.id)\r\n\r\n                }\r\n                setLangURL(`/api/update_order_lang/${id}`)\r\n            })\r\n            .catch(\r\n                error => console.error(error)\r\n            )\r\n            \r\n            setModHmodHeader(\"Edit Order Category\")\r\n            \r\n        }\r\n        setModAction('edit_order')\r\n        setMvisible(true)\r\n    }\r\n\r\n    // render modal\r\n    const renderMdata = (action = \"\") => {\r\n        let template = null\r\n\r\n        if (action === 'edit_order') {\r\n            template = (\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n\r\n                            <input name=\"url\" defaultValue={langURL} ref={register()} type=\"hidden\"/>\r\n                            <input type=\"hidden\" defaultValue={appauth.user_id} name=\"user_id\" ref={register()}/>\r\n                            <input type=\"hidden\" defaultValue='1' name=\"status\" ref={register()}/>\r\n                            <input type=\"hidden\" defaultValue={appauth.apptoken} name=\"_token\" ref={register()}/>\r\n\r\n\r\n                            <div className=\"row\">\r\n\r\n\r\n                                <div className=\"default-field col s12\">\r\n\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <input id=\"title\" \r\n                                            defaultValue={langtitle} \r\n                                            name=\"name\" type=\"text\" \r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setLangtitle(e.target.value)} />\r\n                                    {errors.name && <span className=\"red_message\">This field is required</span>}\r\n\r\n                                </div>\r\n\r\n                                <div className=\"default-field col s12\">\r\n\r\n                                    <label htmlFor=\"notes\"> Description </label>  \r\n                                    <textarea id=\"description\" \r\n                                            className=\"materialize-textarea\" \r\n                                            defaultValue={langnotes} \r\n                                            name=\"description\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setLangnotes(e.target.value)} \r\n                                            ></textarea>\r\n                                    {errors.description && <span className=\"red_message\">This field is required</span>}\r\n                                    \r\n                                </div>\r\n\r\n                                {\r\n                                    (langURL !== 'C') ?\r\n                                        <div className=\"col s12\">\r\n                                            <label htmlFor=\"archive\">Archive</label>\r\n                                            <select id=\"archive\" className=\"browser-default\" name=\"archive\" ref={register()}>\r\n                                                <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                                <option value=\"0\">No</option>\r\n                                                <option value=\"1\">Yes</option>\r\n                                                \r\n                                            </select>\r\n                                            {errors.archive && <span className=\"red_message\">This field is required</span>}\r\n                                        </div>\r\n                                    : ''\r\n\r\n                                }\r\n\r\n                                <div className=\"col s6\" style={{marginTop: '2rem'}}>\r\n                                    <input style={{marginRight: \"30px\"}} id=\"submit_format\" \r\n                                            className=\"waves-effect waves-light btn\" \r\n                                            name=\"update\"  \r\n                                            type=\"submit\"/>  \r\n                                    \r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"row\">\r\n                            <div className=\"right-align row_del\">\r\n                                    {\r\n                                        (langURL !== 'C') ?\r\n                                        \r\n\r\n                                            <button onClick ={(rowid) => delRecord(rowid)} className=\"waves-effect waves-light btn red \">Delete </button>  \r\n                                        : ''\r\n                                    }\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            template= (<div>Processing ...</div>)\r\n        }\r\n        return template\r\n    }\r\n\r\n    // render orderlangs\r\n    const renderorderLang = () => {\r\n        let template = null\r\n\r\n        if(orderlangs.length < 1){\r\n            template = (\r\n                 <div className=\"card material-table\">\r\n                    <h4>  Order Languages </h4>\r\n                    <p> No data available</p>\r\n                </div>\r\n            )\r\n        }else{\r\n\r\n            template = orderlangs.map((item, i) => (\r\n    \r\n                    <tr key={i}>\r\n                        <td>{item.name}</td>\r\n                        <td> {item.status} </td>\r\n                        <td> {item.description} </td>\r\n                        <td> \r\n                            <Moment fromNow>\r\n                                {item.created_at} \r\n                            </Moment>\r\n                        </td>\r\n                        <td> <button className=\"btn waves-effect waves-light green\" onClick={() => editOrderLang(item.id)}>Edit</button> </td>\r\n                    </tr>\r\n            ))\r\n        }\r\n\r\n\r\n        return template\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n\r\n                <ToastContainer />\r\n                <Modal\r\n                        title={modHeader}\r\n                        visible={mvisible}\r\n                        onOk={()=>setMvisible(false)}\r\n                        onCancel={()=>setMvisible(false)}\r\n                    >\r\n\r\n                        <div>\r\n\r\n                            { renderMdata(modAction) }\r\n\r\n                        </div>\r\n\r\n\r\n                </Modal>\r\n\r\n\r\n                <h3 className={styles.h3m20}>Orders Languages</h3>\r\n\r\n                <button className=\"btn waves-effect waves-light green\" onClick={() => editOrderLang(-1)}>Add</button>\r\n                <table className=\"highlight\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Active</th>\r\n                        <th>Description</th>\r\n                        <th>Created At</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead> \r\n\r\n                    <tbody>\r\n                    \r\n\r\n                        {renderorderLang()}\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            \r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport { Modal } from 'antd';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// widjets\r\n// import ModalProcessing from '../../Widgets/Modal/modal_processing'\r\n\r\n// styles\r\nimport styles from '../../../Academic/acc_placeorder.module.css'\r\n\r\n\r\n// import helpers\r\nimport { URL } from '../../../../Helpers/config'\r\nimport appauth from \"../../../../appauth\";\r\n \r\n\r\n\r\n\r\nexport default function AccPlaceOrder(props) {\r\n\r\n    // decrare states\r\n    const [blogCat, setBlogCat] = useState([]);\r\n    const [blogFormat, setBlogFormat] = useState([]);\r\n    const [blogLang, setBlogLang] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [feedback, setFeedback] = useState(\"processing ...\");\r\n    const [wordcount, setWordcount] = useState(275);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n\r\n        // call categories\r\n        callFromServer(`${URL}/api/order_cat`, setBlogCat)\r\n        // formats\r\n        callFromServer(`${URL}/api/order_format`, setBlogFormat)\r\n        // lang\r\n        callFromServer(`${URL}/api/order_lang`, setBlogLang)\r\n\r\n\r\n        // fetch(`${URL}/api/order_cat`)\r\n        // .then(response => response.json())\r\n        // .then(data => {\r\n        //     setBlogCat(data)\r\n        // })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const { register,reset, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = data => {\r\n\r\n\r\n        \r\n        let url = `${URL}/api/nil_order`\r\n        \r\n        let data2 = new FormData(document.querySelector(\"#nil_order\"));\r\n        \r\n        showModal()\r\n        axios.post(url, data2)\r\n        .then(res => {\r\n\r\n            handleCancel()\r\n            if(res.data.code === 1){\r\n                setFeedback(\"Data was posted Successfully \")\r\n                reset()\r\n                setWordcount(275)\r\n            }else{\r\n                setFeedback(\"An error occured\")\r\n            }\r\n            showModal()\r\n        })\r\n        .catch(err => {\r\n            console.error(err)\r\n            toast.error(\"Error \")\r\n        })\r\n    };\r\n\r\n\r\n    const calcWordcount = (event) => {\r\n        let val = event.target.value * 275\r\n        setWordcount(val)\r\n    }\r\n\r\n\r\n\r\n    // call data from server\r\n    const callFromServer = (url, stateset) => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            stateset(data)\r\n        })\r\n    }\r\n\r\n    const displayOrderCategories = () => {\r\n        // console.log({blogCat})\r\n        \r\n        if(blogCat.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogCat.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // formats\r\n    const displayOrderFormats = () => {\r\n        // console.log({blogFormat})\r\n        \r\n        if(blogFormat.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogFormat.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // displayOrderLang\r\n    const displayOrderLang = () => {\r\n        // console.log({blogFormat})\r\n        \r\n        if(blogLang.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogLang.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // modal funcs\r\n    const showModal = () => {\r\n        setVisible(true)\r\n      };\r\n    \r\n      const handleOk = e => {\r\n        // console.log(e);\r\n        setVisible(false)\r\n      };\r\n    \r\n     const  handleCancel = e => {\r\n        // console.log(e);\r\n        setVisible(false)\r\n    }\r\n    // modal end\r\n  return (\r\n\r\n    <div className=\"container\">\r\n\r\n        <div className=\"row\">\r\n            <div className={styles.header + \" col s12\"}>\r\n\r\n\r\n                <div className= 'section' style={{marginTop: '6rem'}}>\r\n\r\n                    <h4> Place your order     </h4>\r\n                    <p> We will commounicate to you for more details </p>\r\n\r\n\r\n                    {/* <ModalProcessing ref=\"child\"/> */}\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n\r\n            <div className=\"col s12\">\r\n\r\n                    <ToastContainer />\r\n                    <Modal\r\n                        title=\"Please wait\"\r\n                        visible={visible}\r\n                        onOk={handleOk}\r\n                        onCancel={handleCancel}\r\n                        >\r\n                        <p id=\"processing_data\"> { feedback }</p>\r\n                    </Modal>\r\n\r\n                    <div className=\"section\">\r\n\r\n                        {/* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */}\r\n                        <form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\" id=\"nil_order\">\r\n                            \r\n\r\n                            <input type=\"hidden\" defaultValue={appauth.user_id} name=\"user_id\" ref={register()}/>\r\n                            <input type=\"hidden\" defaultValue={appauth.apptoken} name=\"_token\" ref={register()}/>\r\n                            <input type=\"hidden\" defaultValue={'N'} name=\"nil\" ref={register()}/>\r\n\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input id=\"email\" name=\"email\" type=\"text\" \r\n                                        className=\"validate\" \r\n                                        defaultValue={appauth.user_email}\r\n                                        ref={register({ required: true })}/>\r\n                                {errors.email && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"title\" name=\"title\" type=\"text\" className=\"validate\" ref={register({ required: true })}/>\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                {errors.title && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"col s4\">\r\n                                <label htmlFor=\"category\">Category</label>\r\n                                <select id=\"category\"  className=\"browser-default\" name=\"category_id\" ref={register({ required: true })}>\r\n                                    <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                    { displayOrderFormats() }\r\n                                </select>\r\n                                {errors.category_id && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"col s4\">\r\n                                <label htmlFor=\"format\">Format</label>\r\n                                <select id=\"format\" className=\"browser-default\" name=\"format_id\" ref={register({ required: true })}>\r\n                                     <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                    { displayOrderCategories() }\r\n                                    \r\n                                </select>\r\n                                {errors.format_id && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"col s4\">\r\n                                <label htmlFor=\"language\">Language</label>\r\n                                <select id=\"language\" className=\"browser-default\"  name=\"language_id\" ref={register({ required: true })}>\r\n                                    <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                    { displayOrderLang() }\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s4\">\r\n                                <input id=\"pages\" name=\"pages\" type=\"number\" className=\"validate\"  ref={register({ required: true })} onChange = {(e) => calcWordcount(e)}/>\r\n                                <label htmlFor=\"pages\">Page(s)</label>\r\n                                {errors.pages && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s4\">\r\n                                <label htmlFor=\"word_count\">Word Count</label>\r\n                                <input id=\"word_count\" name=\"word_count\" \r\n                                        type=\"number\" \r\n                                        className=\"validate\" value={wordcount} ref={register({ required: true })} onChange = {(e) => setWordcount(e.target.value)}/>\r\n                                {errors.word_count && <span className=\"red_message\">This field is required</span>}\r\n                            </div>\r\n\r\n                            <div className=\"input-field col s12\">\r\n                                <i className=\"material-icons prefix\">mode_edit</i>\r\n                                <textarea id=\"notes\" name=\"notes\" className=\"materialize-textarea\"></textarea>\r\n                                <label htmlFor=\"notes\">Notes</label>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"input-field col s12\">\r\n\r\n                                    <p> Documents <small> <i> - (hold CTRL to select multiple docs)</i></small> </p>\r\n                                    <input type=\"file\" id=\"docs\" className=\"browser-default\" name=\"file\" multiple />\r\n                                \r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        <br/>\r\n                        <div className=\"input-field col s12\">\r\n\r\n                            <input className=\"btn\" type=\"submit\" />\r\n                        </div>\r\n                        \r\n                        </form>\r\n\r\n                    </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n    \r\n  );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\n// dependencies\r\nimport { Modal } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport M from 'materialize-css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL, fetchData, postData } from '../../../../Helpers/config'\r\nimport appauth from '../../../../appauth';\r\n\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default function BlogCat() {\r\n\r\n    \r\n    const [blogcats, setBlogcats] = useState([])\r\n    \r\n    const [mvisible, setMvisible] = useState(false)\r\n    const [modAction, setModAction] = useState(\"\")\r\n    const [modHeader, setModHmodHeader] = useState(\"Nyenjeri Blog\")\r\n\r\n\r\n    // set inputs\r\n    const [cattitle, setCattitle] = useState('')\r\n    const [catnotes, setCatnotes] = useState('')\r\n    const [catURL, setCatURL] = useState('')\r\n    const [rowid, setRowid] = useState('')\r\n\r\n\r\n    \r\n    // call seerver data\r\n    useEffect(() => {\r\n      \r\n\r\n        M.AutoInit();\r\n\r\n        let url_blog_cats = `${URL}/api/blog_category?_token=${appauth.apptoken}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_blog_cats, {data}).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setBlogcats(data.msg)\r\n        })\r\n\r\n    },[])\r\n\r\n\r\n    // submit data\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    \r\n\r\n\r\n    const onSubmit = data => {\r\n        let url =''\r\n        if(data.url === 'C') {\r\n            url = `${URL}/api/blog_category`\r\n        }else{\r\n            url = `${URL + data.url}` \r\n        }  \r\n        \r\n            \r\n        postData(url, data)\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.code === -1) {\r\n                    toast.error(\"Fatal Error while fetching data\") \r\n                }else {\r\n                    (data.msg.code === -1) ? toast.error(data.msg.msg) : toast.success(data.msg.msg);\r\n                    \r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 2000);\r\n                }\r\n                setMvisible(false)\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                toast.error(\"Fatal Error\") \r\n            })\r\n        \r\n    }\r\n\r\n\r\n\r\n    const delRecord = (id) => {\r\n        let url = `${URL}/api/del_blog_cat/${rowid}`\r\n\r\n\r\n        let confirmation = window.confirm(\"Are you sure you want to delete the record\")\r\n\r\n        console.log( url);\r\n        if (confirmation) {\r\n            toast.info(\"Processing ...\")\r\n            \r\n            fetchData(url)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    \r\n                    if(data.code === -1) {\r\n                        toast.error(data.msg.msg) \r\n                    }else {\r\n                        \r\n                        (data.msg.code === -1) ? toast.error(data.msg.msg) : toast.success(data.msg.msg);\r\n                        setTimeout(() => {\r\n                            window.location.reload()\r\n                        }, 3000);\r\n                    }\r\n                    setMvisible(false)\r\n                })\r\n                .catch(err => console.error(err))\r\n        }else{\r\n            setMvisible(false)\r\n        }\r\n\r\n    } \r\n\r\n\r\n\r\n\r\n    // edit Blog\r\n    const editBlogCat = (id) => {\r\n        // call server for data\r\n        if (id === -1) {\r\n\r\n            setCattitle('')\r\n            setCatnotes('')\r\n            setCatURL(`C`)\r\n            setModHmodHeader(\"Add Blog Category\")\r\n\r\n        }else{\r\n\r\n            \r\n            fetchData(`${URL}/api/get_blog_cat/${id}`)\r\n            .then(data => {\r\n                if(data.code === -1) {\r\n                    toast.error(\"Unable to fetch data\")\r\n                }else{\r\n                    let dat = data.msg\r\n                    console.log(dat);\r\n                    \r\n                    setCattitle(dat.title)\r\n                    setCatnotes(dat.description)\r\n                    setRowid(dat.id)\r\n\r\n                }\r\n                setCatURL(`/api/update_blog_cat/${id}`)\r\n            })\r\n            .catch(\r\n                error => console.error(error)\r\n            )\r\n    \r\n            setModHmodHeader(\"Edit Blog Category\")\r\n\r\n        }\r\n        setModAction('edit_order')\r\n        setMvisible(true)\r\n    }\r\n\r\n\r\n\r\n\r\n    // render modal\r\n    const renderMdata = (action = \"\") => {\r\n        let template = null\r\n\r\n        if (action === 'edit_order') {\r\n            template = (\r\n                <div>\r\n                    <div className=\"row\">\r\n\r\n                        <form className=\"col s12\" onSubmit={handleSubmit(onSubmit)}>\r\n                            <div className=\"row\">\r\n\r\n                                <input name=\"url\" defaultValue={catURL} ref={register()} type=\"hidden\"/>\r\n                                <input type=\"hidden\" defaultValue={appauth.user_id} name=\"user_id\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue='1' name=\"status\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue={appauth.apptoken} name=\"_token\" ref={register()}/>\r\n\r\n\r\n                                <div className=\"default-field col s12\">\r\n\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <input id=\"title\" \r\n                                            defaultValue={cattitle} \r\n                                            name=\"title\" type=\"text\" \r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setCattitle(e.target.value)} />\r\n                                    {errors.name && <span className=\"red_message\">This field is required</span>}\r\n\r\n                                </div>\r\n\r\n                                <div className=\"default-field col s12\">\r\n\r\n                                    <label htmlFor=\"description\"> Description </label>  \r\n                                    <textarea id=\"description\" \r\n                                            className=\"materialize-textarea\" \r\n                                            defaultValue={catnotes} \r\n                                            name=\"description\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => setCatnotes(e.target.value)} \r\n                                            ></textarea>\r\n                                    {errors.description && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                {\r\n                                    (catURL !== 'C') ?\r\n                                        <div className=\"col s12\">\r\n                                            <label htmlFor=\"archive\">Archive</label>\r\n                                            <select id=\"archive\" className=\"browser-default\" name=\"archive\" ref={register()}>\r\n                                                <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                                <option value=\"0\">No</option>\r\n                                                <option value=\"1\">Yes</option>\r\n                                                \r\n                                            </select>\r\n                                            {errors.archive && <span className=\"red_message\">This field is required</span>}\r\n                                        </div>\r\n                                    : ''\r\n\r\n                                }\r\n\r\n                                <div className=\"col s12\" style={{marginTop: '2rem'}}>\r\n                                    <input style={{marginRight: \"30px\"}} id=\"submit_format\" \r\n                                            className=\"waves-effect waves-light btn\" \r\n                                            name=\"update\"  \r\n                                            type=\"submit\"\r\n                                    />                                     \r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </form>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"right-align row_del\">\r\n                                    {\r\n                                        (catURL !== 'C') ?                                            \r\n\r\n                                            <button onClick ={(rowid) => delRecord(rowid)} className=\"waves-effect waves-light btn red \">Delete </button>  \r\n                                        : ''\r\n                                    }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            template= (<div>Processing ...</div>)\r\n        }\r\n        return template\r\n    }\r\n\r\n\r\n\r\n\r\n    // render Blogcats\r\n    const renderBlogcat = () => {\r\n        let template = null\r\n\r\n        template = blogcats.map((item, i) => (\r\n\r\n                <tr key={i}>\r\n                    <td>{item.title}</td>\r\n                    <td> {(item.status === 1) ? \"Yes\" : \"No\"} </td>\r\n                    <td> {item.description} </td>\r\n                    <td> \r\n                        <Moment fromNow>\r\n                            {item.created_at} \r\n                        </Moment>\r\n                    </td>\r\n                    <td> <button className=\"btn waves-effect waves-light green\" onClick={() => editBlogCat(item.id)}>Edit</button> </td>\r\n                </tr>\r\n        ))\r\n\r\n        return template\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if(blogcats.length < 1){\r\n        return (\r\n                <div className=\"card material-table\">\r\n                    <p>No data currentrly available</p>\r\n                    <button className=\"btn waves-effect waves-light green\" onClick={() => editBlogCat(-1)}>Add Blog Category</button>\r\n\r\n\r\n\r\n\r\n                    <ToastContainer />\r\n                    <Modal\r\n                            title={modHeader}\r\n                            visible={mvisible}\r\n                            onOk={()=>setMvisible(false)}\r\n                            onCancel={()=>setMvisible(false)}\r\n                        >\r\n    \r\n                            <div>\r\n    \r\n                                { renderMdata(modAction) }\r\n    \r\n                            </div>\r\n    \r\n    \r\n                    </Modal>\r\n\r\n\r\n                </div>\r\n                )\r\n    }else{\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <ToastContainer />\r\n                    <Modal\r\n                            title={modHeader}\r\n                            visible={mvisible}\r\n                            onOk={()=>setMvisible(false)}\r\n                            onCancel={()=>setMvisible(false)}\r\n                        >\r\n    \r\n                            <div>\r\n    \r\n                                { renderMdata(modAction) }\r\n    \r\n                            </div>\r\n    \r\n    \r\n                    </Modal>\r\n    \r\n    \r\n                    <h3 className={styles.h3m20}>Blog Categories</h3>\r\n    \r\n    \r\n                    <button className=\"btn waves-effect waves-light green\" onClick={() => editBlogCat(-1)}>Add</button>\r\n                    <table className=\"highlight\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Active</th>\r\n                            <th>Description</th>\r\n                            <th>Created At</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead> \r\n    \r\n                        <tbody>\r\n                        \r\n    \r\n                            {renderBlogcat()}\r\n    \r\n    \r\n                        </tbody>\r\n                    </table>\r\n                \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n// dependencies\r\nimport M from 'materialize-css';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL, fetchData } from '../../../../Helpers/config'\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function AdminBlogs() {\r\n\r\n    \r\n    const [blogs, setBlogs] = useState([])\r\n\r\n\r\n    // call seerver data\r\n    useEffect(() => {\r\n\r\n        M.AutoInit();\r\n\r\n        let url_blogs = `${URL}/api/blogs?archived=0`\r\n\r\n        fetchData(url_blogs).then(data=>{\r\n            \r\n            if(data.code === -1){\r\n                toast.error(\"Fatal Error while fetching data\")\r\n            }else{\r\n\r\n                (data.code === -1) ? toast.error(data.msg.msg) : setBlogs(data.msg.msg)\r\n            }\r\n        })\r\n        \r\n\r\n    },[])\r\n\r\n    const delRecord = (id) => {\r\n        let url = `${URL}/api/del_blog/${id}`\r\n\r\n        console.log(id)\r\n\r\n        let confirmation = window.confirm(\"Are you sure you want to delete the record\")\r\n\r\n        console.log( url);\r\n        if (confirmation) {\r\n            \r\n            fetchData(url)\r\n                .then(data => {\r\n                    if(data.code === -1) {\r\n                        toast.error(data.msg.msg) \r\n                    }else {\r\n                        toast.success(data.msg.msg)\r\n                        setTimeout(() => {\r\n                            window.location.reload()\r\n                        }, 3000);\r\n                    }\r\n                })\r\n                .catch(err => console.error(err))\r\n        }else{\r\n        }\r\n\r\n    } \r\n\r\n\r\n    // render blogs\r\n    const blogs_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"title\",\r\n            label: \"Title\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },        \r\n        {\r\n        name: 'Action',\r\n        options: {\r\n            filter: false,\r\n            sort: false,\r\n            empty: true,\r\n            customBodyRender: (dataIndex, rowData) => {\r\n                console.log(rowData.rowData[0])\r\n                return (\r\n                    <div>\r\n                        <Link style={{marginLeft: '10px'}}\r\n                            to={`/admin_view_blog/${rowData.rowData[0]}`} \r\n                            className=\"btn waves-effect waves-light green\">\r\n                                    view\r\n                        </Link> \r\n\r\n                        <button className=\"btn waves-effect waves-light red\"\r\n                                onClick={() => delRecord(rowData.rowData[0])}\r\n                            >\r\n                            Del\r\n                        </button>\r\n\r\n                    </div>\r\n                );\r\n            }\r\n            },\r\n        }\r\n      ];\r\n\r\n\r\n\r\n    const blogs_options = {\r\n        textLabels: {\r\n            body: {\r\n              noMatch: \"Sorry, no matching records found\",\r\n              toolTip: \"Sort\",\r\n              columnHeaderTooltip: column => `Sort for ${column.label}`\r\n            },\r\n            pagination: {\r\n              next: \"Next Page\",\r\n              previous: \"Previous Page\",\r\n              rowsPerPage: \"Rows per page:\",\r\n              displayRows: \"of\",\r\n            },\r\n            toolbar: {\r\n              search: \"Search\",\r\n              downloadCsv: \"Download CSV\",\r\n              print: \"Print\",\r\n              viewColumns: \"View Columns\",\r\n              filterTable: \"Filter Table\",\r\n            },\r\n            filter: {\r\n              all: \"All\",\r\n              title: \"FILTERS\",\r\n              reset: \"RESET\",\r\n            },\r\n            viewColumns: {\r\n              title: \"Show Columns\",\r\n              titleAria: \"Show/Hide Table Columns\",\r\n            }\r\n          },\r\n          selectableRows: false\r\n      };\r\n\r\n\r\n    const blogs_data = blogs\r\n\r\n\r\n    if(blogs.length < 1){\r\n        return (<>\r\n                    <ToastContainer />\r\n                    <h4 className=\"card material-table\">No data available </h4>\r\n                </>)\r\n    }else{\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"Xcontainer\">\r\n                 \r\n    \r\n                    <ToastContainer />\r\n                    <h3 className={styles.h3m20}> Blogs</h3>\r\n    \r\n                    <div id=\"admin\" className=\"col s12\">\r\n                        <div className=\"card material-table\">\r\n\r\n                            <Link style={{marginBottom: '10px'}}\r\n                                to={`/admin_addblog`} \r\n                                className=\"btn waves-effect waves-light green\">\r\n                                        Add\r\n                            </Link>\r\n\r\n                            <MUIDataTable\r\n                                title={\"Blogs Table\"}\r\n                                data={blogs_data}\r\n                                columns={blogs_columns}\r\n                                options={blogs_options}\r\n                            />\r\n                        \r\n                        </div>\r\n                    </div>\r\n    \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n// dependencies\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\n\r\n\r\nimport M from 'materialize-css'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\n// import helpers\r\nimport { URL, fetchData, postData, tinymceKey } from '../../../../Helpers/config'\r\nimport appauth from '../../../../appauth'\r\n\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default class blog_view extends Component {\r\n\r\n    state ={\r\n        editor: '',\r\n        post_body: '',\r\n        featured_image: '',\r\n        blog_category_id: '',\r\n        post_cats: [],\r\n        post: []\r\n\r\n    }\r\n\r\n    post_id = this.props.match.params.id\r\n\r\n\r\n\r\n    handleEditorChange  = (content, editor) => {\r\n\r\n        let post_body = content \r\n        \r\n        this.setState({\r\n            editor,\r\n            post_body\r\n        });\r\n      };\r\n\r\n    componentDidMount() {\r\n        M.AutoInit();\r\n\r\n\r\n        let url_post_cats = `${URL}/api/blog_category?_token=${appauth.apptoken}`\r\n        let url_post = `${URL}/api/get_blog/${this.post_id}?_token=${appauth.apptoken}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_post_cats, {data}).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : this.setState({ post_cats: data.msg })\r\n        })\r\n\r\n        fetchData(url_post, {data}).then(data=>{\r\n            if(data.code === -1){\r\n                toast.error(\"Fatal Error while fetching data\")\r\n            }else{\r\n\r\n                (data.msg.code === -1) ? toast.error(data.msg.msg) : this.setState({ post: data.msg.msg })\r\n                \r\n            }\r\n            \r\n\r\n            if (this.state.post !==null && this.state.post !==undefined) {\r\n\r\n                this.setState({ \r\n                    post_body: this.state.post\r\n                })\r\n            } else {\r\n                this.setState({ post_body: '' });\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    displayPostCats(){\r\n\r\n        if(this.state.post_cats.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = this.state.post_cats.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.title}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n\r\n    }\r\n      \r\n\r\n\r\n    submitData = (e) => {\r\n        e.preventDefault();\r\n    \r\n        let url = `${URL}/api/update_blog/${this.post_id}`\r\n        let formdata = new FormData(window.document.querySelector(\"#post_form\"));\r\n        formdata.append('body', this.state.post_body)\r\n        formdata.append('user_id', appauth.user_id)\r\n        \r\n        let post_title = (formdata.get('title'));\r\n        let  formFields = document.getElementById('post_form').elements;\r\n        let post_img = (formFields['featured_image'].files.length > 0);\r\n        \r\n        if (post_img === false) {\r\n            toast.error(\"Please provide an Image in the form field \")\r\n        } else if(post_title === ''){\r\n            toast.error(\"Please provide a title in the form field \")\r\n        } else {\r\n            \r\n            \r\n            postData(url, formdata)\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data.code === -1) {\r\n                        toast.error(\"Fatal Error while fetching data\") \r\n                }else {\r\n                    (data.msg.code === -1) ? toast.error(data.msg.msg) : toast.success(data.msg.msg);\r\n                    setTimeout(() => {\r\n                        window.location.reload()\r\n                    }, 200);\r\n                }\r\n            })\r\n            .catch(err =>{ \r\n                console.error(err)\r\n                toast.error(\"Fatal Error while fetching data\") \r\n            })\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.post.length < 1){\r\n            return <div>\r\n                <ToastContainer />\r\n                <div className=\"card material-table\">\r\n                    <p>No data available at the moment</p>\r\n                </div>\r\n            </div>\r\n        }else{\r\n            \r\n            return (\r\n                <div>\r\n                    <ToastContainer />\r\n    \r\n    \r\n                    <div className=\"card material-table\">\r\n                        <h4 className={styles.blog_view}>View Post</h4>\r\n    \r\n    \r\n                        <form  encType=\"multipart/form-data\" id=\"post_form\" onSubmit = { (e) => this.submitData(e) }>\r\n\r\n                            <input type=\"hidden\" defaultValue={appauth.user_id} name=\"user_id\" />\r\n                            <input type=\"hidden\" defaultValue={appauth.apptoken} name=\"_token\" />\r\n    \r\n                            <div className=\"input-field col s12\">\r\n                                <p >Title</p>\r\n                                <input id=\"title\" \r\n                                        defaultValue={this.state.post.title}\r\n                                        name=\"title\" \r\n                                        type=\"text\" \r\n                                        className=\"validate\" \r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"input-field col s12\">\r\n                                <p>Short Description</p>\r\n                                <textarea id=\"textarea1\" name=\"short_descr\" class=\"materialize-textarea\"\r\n                                value={this.state.post.description}\r\n                                >  </textarea>\r\n                            </div>\r\n     \r\n                            <div className=\"col s12\">\r\n                                <label htmlFor=\"category\">Category</label>\r\n                                <select id=\"category\"  className=\"browser-default\" name=\"blog_category_id\">\r\n                                    <option value=\"\" disabled defaultValue={this.state.post.cats.id}>Choose your option</option>\r\n                                    { this.displayPostCats() }\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div className=\"input-field col s12\">\r\n                                <p>Body</p>\r\n                                <Editor\r\n                                    apiKey = {tinymceKey}\r\n                                    initialValue = {this.state.post.body}\r\n                                    init={{\r\n                                        plugins: 'autoresize advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount',\r\n                                        toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code media',\r\n                                        placeholder: \"Write something here\"\r\n                                    }}\r\n                                    onEditorChange={this.handleEditorChange}\r\n                                />\r\n                                \r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n    \r\n                                <p> Featured Image </p>\r\n                                <input type=\"file\" id=\"featured_image\" className=\"browser-default\" name=\"featured_image\"  />\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"col s12\">\r\n                                <label htmlFor=\"archived\"> Archive </label>\r\n                                <select id=\"archived\"  className=\"browser-default\" name=\"archived\">\r\n                                    <option value=\"0\" >No</option>\r\n                                    <option value=\"1\" >Yes</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n    \r\n                            <div className=\"input-field col s12\">\r\n                                <input className=\"btn\" type=\"submit\" value=\"Update\" />\r\n                            </div>\r\n    \r\n                        </form>\r\n                    \r\n                    \r\n                    </div>\r\n    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n// dependencies\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nimport M from 'materialize-css'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n \r\n\r\n// import helpers\r\nimport { URL, fetchData, postData, tinymceKey } from '../../../../Helpers/config'\r\nimport appauth from '../../../../appauth'\r\n\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default class blog_view extends Component {\r\n\r\n    state ={\r\n        editor: '',\r\n        post_body: '',\r\n        featured_image: '',\r\n        blog_category_id: '',\r\n        post_cats: []\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleEditorChange  = (content, editor) => {\r\n\r\n        let post_body = content \r\n        \r\n        this.setState({\r\n            editor,\r\n            post_body\r\n        });\r\n      };\r\n\r\n    componentDidMount() {\r\n        M.AutoInit();\r\n\r\n\r\n        let url_post_cats = `${URL}/api/blog_category?_token=${appauth.apptoken}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_post_cats, {data}).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : this.setState({ post_cats: data.msg })\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    displayPostCats(){\r\n\r\n        if(this.state.post_cats.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = this.state.post_cats.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.title}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n\r\n    }\r\n      \r\n\r\n\r\n      submitData = (e) => {\r\n        e.preventDefault();\r\n    \r\n        let url = `${URL}/api/blogs`\r\n        let formdata = new FormData(window.document.querySelector(\"#post_form\"));\r\n        formdata.append('body', this.state.post_body)\r\n        formdata.append('user_id', appauth.user_id)\r\n\r\n        \r\n        let post_title = (formdata.get('title'));\r\n        let  formFields = document.getElementById('post_form').elements;\r\n        let post_img = (formFields['featured_image'].files.length > 0);\r\n        \r\n        if (post_img === false) {\r\n            toast.error(\"Please provide an Image in the form field \")\r\n        } else if(post_title === ''){\r\n            toast.error(\"Please provide a title in the form field \")\r\n        } else {\r\n\r\n            postData(url, formdata)\r\n              .then(data => {\r\n                  console.log(data);\r\n                  if(data.code === -1) {\r\n                          toast.error(\"Fatal Error while fetching data\") \r\n                  }else {\r\n                      (data.msg.code === -1) ? toast.error(data.msg.msg) : toast.success(data.msg.msg);\r\n                      setTimeout(() => {\r\n                          window.location.reload()\r\n                      }, 200);\r\n                  }\r\n              })\r\n              .catch(err =>{ \r\n                  console.error(err)\r\n                  toast.error(\"Fatal Error while fetching data\") \r\n              })\r\n        }\r\n          \r\n\r\n\r\n          \r\n          \r\n      }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <ToastContainer />\r\n\r\n\r\n                <div className=\"card material-table\">\r\n                    <h4 className={styles.h50}>Add Post</h4>\r\n\r\n\r\n                    <form  encType=\"multipart/form-data\" id=\"post_form\" onSubmit = { (e) => this.submitData(e) }>\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <input id=\"title\" \r\n                                    name=\"title\"\r\n                                    placeholder=\"blog title ...\" \r\n                                    type=\"text\" \r\n                            />\r\n                            <label htmlFor=\"title\">Title</label>\r\n                        </div>\r\n\r\n                        <div class=\"input-field col s12\">\r\n                            <textarea id=\"textarea1\" name=\"description\" class=\"materialize-textarea\"></textarea>\r\n                            <label for=\"textarea1\">Short Description</label>\r\n                        </div>\r\n\r\n                        <div className=\"col s12\">\r\n                            <label htmlFor=\"category\">Category</label>\r\n                            <select id=\"category\"  className=\"browser-default\" name=\"blog_category_id\">\r\n                                <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                { this.displayPostCats() }\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <p>Body</p>\r\n                            <Editor\r\n                                apiKey = {tinymceKey}\r\n                                init={{\r\n                                    plugins: 'autoresize advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount',\r\n                                    toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code media',\r\n                                    placeholder: \"Write something here\"\r\n                                }}\r\n                                onEditorChange={this.handleEditorChange}\r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n\r\n                            <p> Featured Image </p>\r\n                            <input type=\"file\" id=\"featured_image\" className=\"browser-default\" name=\"featured_image\"  />\r\n                            \r\n                        </div>\r\n\r\n\r\n                        <div className=\"input-field col s12\">\r\n                            <input className=\"btn\" type=\"submit\" />\r\n                        </div>\r\n\r\n                    </form>\r\n                \r\n                \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\n// dependencies\r\nimport { Modal } from 'antd';\r\nimport M from 'materialize-css';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// import helpers\r\nimport { URL, fetchData, postData } from '../../../../Helpers/config'\r\nimport appauth from '../../../../appauth';\r\n\r\n// styles\r\nimport styles from '../dashboard.module.css'\r\n\r\nexport default function Users(props) {\r\n\r\n\r\n\r\n\r\n    // set states\r\n    const [users, setUsers] = useState([])\r\n    \r\n    const [mvisible, setMvisible] = useState(false)\r\n    const [modAction, setModAction] = useState(\"\")\r\n    const [modHeader, setModHmodHeader] = useState(\"Nyenjeri Users\")\r\n\r\n\r\n    // set inputs\r\n    const [names, setNames] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [userURL, setUserURL] = useState('')\r\n    const [rowid, setRowid] = useState('')\r\n\r\n\r\n\r\n\r\n    // call seerver data\r\n    useEffect(() => {\r\n\r\n        console.log({props});\r\n\r\n        M.AutoInit();\r\n\r\n        let url_users = `${URL}/api/create_users?_token=${appauth.apptoken}`\r\n        let data = {\r\n            \"_token\": appauth.apptoken\r\n        }\r\n\r\n\r\n        fetchData(url_users, {data}).then(data=>{\r\n            (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setUsers(data.msg)\r\n        })\r\n\r\n\r\n    },[])\r\n\r\n\r\n\r\n        // submit data\r\n        const { register, handleSubmit, errors, watch } = useForm();\r\n        const password = useRef({});\r\n        password.current = watch(\"password\", \"\");\r\n\r\n\r\n        const onSubmit = data => {\r\n    \r\n            let url =''\r\n            if(data.url === 'C') {\r\n                url = `${URL}/api/create_users`\r\n            }else{\r\n                url = `${URL + data.url}` \r\n            } \r\n\r\n            console.log(data, url);\r\n            \r\n    \r\n    \r\n            postData(url, data)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    if(data.code === -1) {\r\n                        toast.error(data.msg.msg) \r\n                    }else {\r\n                        toast.success(data.msg.msg)\r\n                        setTimeout(() => {\r\n                            window.location.reload()\r\n                        }, 3000);\r\n                    }\r\n                    setMvisible(false)\r\n                })\r\n                .catch(err => console.error(err))\r\n    \r\n        }\r\n    \r\n        const delRecord = (id) => {\r\n            let url = `${URL}/api/del_user/${rowid}`\r\n    \r\n            let confirmation = window.confirm(\"Are you sure you want to delete the record\")\r\n    \r\n            if (confirmation) {\r\n                \r\n                fetchData(url)\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        if(data.code === -1) {\r\n                            toast.error(data.msg.msg) \r\n                        }else {\r\n                            toast.success(data.msg.msg)\r\n                            setTimeout(() => {\r\n                                window.location.reload()\r\n                            }, 3000);\r\n                        }\r\n                        setMvisible(false)\r\n                    })\r\n                    .catch(err => console.error(err))\r\n            }else{\r\n                setMvisible(false)\r\n            }\r\n    \r\n        } \r\n    \r\n        // edit order\r\n        const editOrderLang = (id) => {\r\n            // call server for data\r\n            if (id === -1) {\r\n    \r\n                setNames('')\r\n                setEmail('')\r\n                setUserURL(`C`)\r\n                setModHmodHeader(\"Add User\")\r\n                \r\n            }else{\r\n    \r\n                fetchData(`${URL}/api/get_user/${id}`)\r\n                .then(data => {\r\n                    console.log(data);\r\n                    \r\n                    if(data.code === -1) {\r\n                        toast.error(\"Unable to fetch data\")\r\n                    }else{\r\n                        let dat = data.msg\r\n                        \r\n                        setNames(dat.names)\r\n                        setEmail(dat.email)\r\n                        setRowid(dat.id)\r\n    \r\n                    }\r\n                    setUserURL(`/api/update_user/${id}`)\r\n                })\r\n                .catch(\r\n                    error => console.error(error)\r\n                )\r\n                \r\n                setModHmodHeader(\"Edit User\")\r\n                \r\n            }\r\n            setModAction('edit_order')\r\n            setMvisible(true)\r\n        }\r\n    \r\n        // render modal\r\n        const renderMdata = (action = \"\") => {\r\n            let template = null\r\n    \r\n            if (action === 'edit_order') {\r\n                template = (\r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <form className=\"col s12\" onSubmit={handleSubmit(onSubmit)}>\r\n    \r\n    \r\n    \r\n                                <input name=\"url\" defaultValue={userURL} ref={register()} type=\"hidden\"/>\r\n                                <input type=\"hidden\" defaultValue={appauth.user_id} name=\"user_id\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue='1' name=\"status\" ref={register()}/>\r\n                                <input type=\"hidden\" defaultValue={appauth.apptoken} name=\"_token\" ref={register()}/>\r\n    \r\n    \r\n                                <div className=\"row\">\r\n    \r\n    \r\n                                    <div className=\"default-field col s12\">\r\n    \r\n                                        <label htmlFor=\"title\">Names</label>\r\n                                        <input id=\"title\" \r\n                                                defaultValue={names} \r\n                                                name=\"names\" type=\"text\" \r\n                                                ref={register({ required: true })}\r\n                                                onChange = {(e) => setNames(e.target.value)} />\r\n                                        {errors.names && <span className=\"red_message\">This field is required</span>}\r\n    \r\n                                    </div>\r\n    \r\n                                    <div className=\"default-field col s12\">\r\n    \r\n                                        <label htmlFor=\"notes\"> Email </label>  \r\n                                        <input id=\"email\" \r\n                                                defaultValue={email}\r\n                                                className=\"validate\" \r\n                                                name=\"email\"\r\n                                                ref={register({ \r\n                                                    required: true,\r\n                                                    pattern: {\r\n                                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                        message: \"invalid email address\"\r\n                                                      }\r\n                                                 })}\r\n                                                onChange = {(e) => setEmail(e.target.value)} \r\n                                                />\r\n                                        {errors.email && <span className=\"red_message\">{errors.email.message}</span>}\r\n                                        \r\n                                    </div>\r\n    \r\n                                    {\r\n                                        (userURL !== 'C') ?\r\n                                            <div className=\"col s12\">\r\n                                                <label htmlFor=\"archive\">Archive</label>\r\n                                                <select id=\"archive\" className=\"browser-default\" name=\"archive\" ref={register()}>\r\n                                                    <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                                    <option value=\"0\">No</option>\r\n                                                    <option value=\"1\">Yes</option>\r\n                                                    \r\n                                                </select>\r\n                                                {errors.archive && <span className=\"red_message\">This field is required</span>}\r\n                                            </div>\r\n                                        : \r\n                                        <div>\r\n\r\n                                            <div className=\"default-field col s12\">\r\n        \r\n                                                <label htmlFor=\"notes\"> Password </label>  \r\n                                                <input id=\"password\" \r\n                                                        name=\"password\"\r\n                                                        type=\"password\"\r\n                                                        autoComplete=\"new-password\"\r\n                                                        ref={\r\n                                                            register({\r\n                                                            required: \"You must specify a password\",\r\n                                                            minLength: {\r\n                                                              value: 6,\r\n                                                              message: \"Password must have at least 6 characters\"\r\n                                                            }\r\n                                                          })\r\n                                                        }\r\n                                                        />\r\n                                                {errors.password && <span className=\"red_message\">{errors.password.message}</span>}\r\n                                                \r\n                                            </div>\r\n\r\n                                            <div className=\"default-field col s12\">\r\n        \r\n                                                <label htmlFor=\"notes\"> Confirm Password </label>  \r\n                                                <input\r\n                                                    name=\"password_repeat\"\r\n                                                    type=\"password\"\r\n                                                    ref={register({\r\n                                                    validate: value =>\r\n                                                        value === password.current || \"The passwords do not match\"\r\n                                                    })}\r\n                                                />\r\n                                                {errors.password_repeat && <span className=\"red_message\">{errors.password_repeat.message}</span>}\r\n                                                \r\n                                            </div>\r\n\r\n                                        </div>\r\n    \r\n                                    }\r\n    \r\n                                    <div className=\"col s6\" style={{marginTop: '2rem'}}>\r\n                                        <input style={{marginRight: \"30px\"}} id=\"submit_format\" \r\n                                                className=\"waves-effect waves-light btn\" \r\n                                                name=\"update\"  \r\n                                                type=\"submit\"/>  \r\n                                        \r\n    \r\n    \r\n                                    </div>\r\n    \r\n    \r\n                                </div>\r\n                            </form>\r\n                            <div className=\"row\">\r\n                                <div className=\"right-align row_del\">\r\n                                        {\r\n                                            (userURL !== 'C') ?                                            \r\n    \r\n                                                <button onClick ={(rowid) => delRecord(rowid)} className=\"waves-effect waves-light btn red \">Delete </button>  \r\n                                            : ''\r\n                                        }\r\n    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }else{\r\n                template= (<div>Processing ...</div>)\r\n            }\r\n            return template\r\n        }\r\n\r\n\r\n\r\n    const user_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"names\",\r\n            label: \"Names\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        }, \r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n             filter: true,\r\n             sort: true,\r\n            }\r\n        },        \r\n        {\r\n        name: 'Action',\r\n        options: {\r\n            filter: false,\r\n            sort: false,\r\n            empty: true,\r\n            customBodyRender: (dataIndex, rowData) => {\r\n                return (\r\n                    \r\n                    <button className=\"btn waves-effect waves-light green\" \r\n                            onClick={() => editOrderLang(rowData.rowData[0])}>\r\n                        Edit\r\n                    </button>\r\n                );\r\n            }\r\n            },\r\n        }\r\n      ];\r\n\r\n    const user_options = {\r\n        textLabels: {\r\n            body: {\r\n              noMatch: \"Sorry, no matching records found\",\r\n              toolTip: \"Sort\",\r\n              columnHeaderTooltip: column => `Sort for ${column.label}`\r\n            },\r\n            pagination: {\r\n              next: \"Next Page\",\r\n              previous: \"Previous Page\",\r\n              rowsPerPage: \"Rows per page:\",\r\n              displayRows: \"of\",\r\n            },\r\n            toolbar: {\r\n              search: \"Search\",\r\n              downloadCsv: \"Download CSV\",\r\n              print: \"Print\",\r\n              viewColumns: \"View Columns\",\r\n              filterTable: \"Filter Table\",\r\n            },\r\n            filter: {\r\n              all: \"All\",\r\n              title: \"FILTERS\",\r\n              reset: \"RESET\",\r\n            },\r\n            viewColumns: {\r\n              title: \"Show Columns\",\r\n              titleAria: \"Show/Hide Table Columns\",\r\n            }\r\n          },\r\n          selectableRows: false\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <div className=\"Xcontainer\">\r\n                 \r\n                    <ToastContainer />\r\n                    <Modal\r\n                        title={modHeader}\r\n                        visible={mvisible}\r\n                        onOk={()=>setMvisible(false)}\r\n                        onCancel={()=>setMvisible(false)}\r\n                        >\r\n\r\n                            <div>\r\n                                { renderMdata(modAction) }\r\n                            </div>\r\n\r\n                    </Modal>\r\n    \r\n                    <h3 className={styles.h3m20}> Users</h3>\r\n    \r\n                    <div id=\"admin\" className=\"col s12\">\r\n                        <div className=\"card material-table\">\r\n\r\n                            <a href=\"#\" className=\"btn waves-effect waves-light green\" \r\n                                    style= {{marginBottom: '8px'}}\r\n                                    onClick={() => editOrderLang(-1)}>\r\n                                Add\r\n                            </a>\r\n                            \r\n                   \r\n    \r\n                            <MUIDataTable\r\n                                title={\" List of Users\"}\r\n                                data={users}\r\n                                columns={user_columns}\r\n                                options={user_options}\r\n                            />\r\n                        \r\n                        </div>\r\n                    </div>\r\n    \r\n    \r\n                </div>\r\n            </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Index(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <h3>This page was not found</h3>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect }  from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// dependencies\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport ProtectedRoute from './AuthRoutes/protected'\r\n\r\n// helpers\r\nimport appauth from './appauth'\r\nimport { URL, fetchData } from './Helpers/config'\r\n\r\n// components\r\nimport AppLayout from './HOC/layout/applayout'\r\nimport appHome from './Components/appHome/apphome'\r\n\r\n// academic\r\nimport AccPlaceOrder from './Components/Academic/acc_placeorder'\r\nimport AccBio from './Components/Academic/acc_bio'\r\nimport AccPayrates from './Components/Academic/acc_payrates'\r\nimport AccBioDescr from './Components/Academic/acc_bio_description'\r\nimport AccServices from './Components/Academic/acc_services'\r\nimport AccWorksamples from './Components/Academic/acc_worksamples'\r\n\r\n// blogs\r\nimport Blogs from './Components/Blogs/blogs'\r\nimport singleBlog from './Components/Blogs/blog_single'\r\n\r\n// Auth\r\nimport Login from './Components/Auth/login'\r\nimport Logout from './Components/Auth/logout'\r\n\r\n\r\n// dashboard\r\nimport AppDashboardLayout from './Components/protected/Dashboard/appdashboard_layout'\r\nimport Dashboard from './Components/protected/Dashboard/dashboard'\r\n\r\nimport NilOrders from './Components/protected/Dashboard/orders/nil_orders'\r\nimport ArchivedOrders from './Components/protected/Dashboard/orders/archived_orders'\r\nimport Orders from './Components/protected/Dashboard/orders/orders'\r\nimport OrderView from './Components/protected/Dashboard/orders/order_view'\r\n\r\nimport OrderFormat from './Components/protected/Dashboard/orders/order_formats'\r\nimport OrderCat from './Components/protected/Dashboard/orders/order_categories'\r\nimport OrderLang from './Components/protected/Dashboard/orders/order_lang' \r\nimport PlaceOrder from './Components/protected/Dashboard/orders/placeOrder'\r\n\r\n// blogs\r\nimport AdminBlogCat from './Components/protected/Dashboard/blogs/blog_cats'\r\nimport AdminBlogs from './Components/protected/Dashboard/blogs/blogs'\r\nimport AdminBlogView from './Components/protected/Dashboard/blogs/blog_view'\r\nimport AdminAddBlog from './Components/protected/Dashboard/blogs/add_blog'\r\n\r\n\r\n// users\r\nimport Users from './Components/protected/Dashboard/users/users'\r\n\r\n\r\n\r\n\r\nimport NotFound from './Components/notFound'\r\n\r\nexport default function Routes(props) {\r\n\r\n    // states\r\n    const [user, setUser] = useState([])\r\n\r\n    useEffect(() =>  {\r\n        let user_id = (appauth.user_id)\r\n        let url_user = `${URL}/api/get_user/${user_id}`\r\n        if(user_id !== null){\r\n            fetchData(url_user).then(data=>{\r\n                (data.code === -1) ? toast.error(\"Fatal Error while fetching data\") : setUser(data.msg.msg)\r\n                \r\n            })\r\n        }else{\r\n        toast.error(\"User Not Found\")\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppLayout {...props}>\r\n                <ToastContainer />\r\n\r\n                <Switch>\r\n\r\n                    {/* load homepage */}\r\n                    <Route path = \"/\" exact component={appHome}/> \r\n\r\n\r\n                    {/* load academic components */}\r\n                    <Route path = \"/acc_placeorder\" exact component={AccPlaceOrder}/> \r\n                    <Route path = \"/acc_bio\" exact component={AccBio}/> \r\n                    <Route path = \"/acc_bio_descr\" exact component={AccBioDescr}/> \r\n                    <Route path = \"/acc_payrates\" exact component={AccPayrates}/> \r\n                    <Route path = \"/acc_services\" exact component={AccServices}/> \r\n                    <Route path = \"/acc_worksamples\" exact component={AccWorksamples}/> \r\n\r\n\r\n\r\n                    {/* Blogs */}\r\n                    <Route path = \"/blogs\" exact component={Blogs}/> \r\n                    <Route path = \"/single_blog/:rowid/:id/:user_id\" exact component={singleBlog}/> \r\n\r\n\r\n                    {/* Auth */}\r\n                    <Route path = \"/login\" exact component={Login}/> \r\n                    <Route path = \"/logout\" exact component={Logout}/> \r\n\r\n                    <AppDashboardLayout>\r\n\r\n                        {/* Dashoard Routes */}\r\n                        <ProtectedRoute path = \"/dashboard\" exact component={Dashboard}/> \r\n\r\n                        {/* orders */}\r\n                        <ProtectedRoute path = \"/nil_orders\" exact component={NilOrders}/> \r\n                        <ProtectedRoute path = \"/archived_orders\" exact component={ArchivedOrders}/> \r\n                        <ProtectedRoute path = \"/orders\" exact component={Orders}/> \r\n                        <ProtectedRoute path = \"/placeOrder\" exact component={PlaceOrder}/> \r\n                        <ProtectedRoute path = \"/view_order/:id\" exact component={OrderView}/> \r\n\r\n                        {/* for admins */}\r\n\r\n                        {\r\n                            (user.admin === 1) ?\r\n                                <>\r\n                                    <ProtectedRoute path = \"/orderformat\" exact component={OrderFormat}/> \r\n                                    <ProtectedRoute path = \"/ordercat\" exact component={OrderCat}/> \r\n                                    <ProtectedRoute path = \"/orderlang\" exact component={OrderLang}/> \r\n            \r\n                                    {/* blogs */}\r\n                                    <ProtectedRoute path = \"/admin_blogcat\" exact component={AdminBlogCat}/> \r\n                                    <ProtectedRoute path = \"/admin_blogs\" exact component={AdminBlogs}/> \r\n                                    <ProtectedRoute path = \"/admin_addblog\" exact component={AdminAddBlog}/> \r\n                                    <ProtectedRoute path = \"/admin_view_blog/:id\" exact component={AdminBlogView}/> \r\n            \r\n                                    {/* users */}\r\n                                    <ProtectedRoute path = \"/users\" exact component={Users}/> \r\n                                </>\r\n                            :\r\n                                <ProtectedRoute path = \"/dashboard\" exact component={Dashboard}/>  \r\n                        }\r\n\r\n                        \r\n                    </AppDashboardLayout>\r\n\r\n                    <Route component={NotFound}/> \r\n\r\n                </Switch>\r\n\r\n            </AppLayout>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n\n\n\n","import Axios from 'axios'\r\n\r\n\r\nconst URL = 'https://researchbrisk.com/flask'\r\n\r\nconst tinymceKey = '9n7q5uo1xhu6jzgvvgmzn0w0qly6ck0p6cffyk4iwxl5ieyq'\r\n\r\nasync function fetchData(url) {\r\n    var g_data;\r\n    await Axios.get(url)\r\n        .then(response => {\r\n            let data = response.data\r\n            g_data = {\r\n                \"code\": 1,\r\n                \"msg\": data\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            g_data = {\r\n                \"code\": -1,\r\n                \"msg\": error\r\n            }\r\n        })\r\n\r\n        return g_data\r\n}\r\n\r\n\r\n\r\nasync function postData(url, data={}, params={}) {\r\n    var p_data;\r\n    await Axios.post(url, data)\r\n        .then(response => {\r\n            let data = response.data\r\n            p_data = {\r\n                \"code\": 1,\r\n                \"msg\": data\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            p_data = {\r\n                \"code\": -1,\r\n                \"msg\": error\r\n            }\r\n        })\r\n\r\n        return p_data\r\n}\r\n\r\nexport  { \r\n    URL, fetchData, postData, tinymceKey\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bio_img\":\"acc_bio_bio_img__2xlOC\",\"bio_img_descr\":\"acc_bio_bio_img_descr__ZTIoJ\",\"header_descr\":\"acc_bio_header_descr__10biV\",\"info_descr\":\"acc_bio_info_descr__Cvdzp\",\"card_head\":\"acc_bio_card_head__1xYc3\"};"],"sourceRoot":""}